<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE BlockLangDef SYSTEM "lang_def.dtd">
<!-- 


This describes every BlockGenus, BlockDrawer, BlockFamilies in Starlogo-TNG.

Note: For BlockGenus, if genus A relies on another genus B, that genus B must be 
specified in the xml file before genus A is specified./  We impose this requirement so 
that sanity checks can be made regarding the validity of a default argument when the
BlockGenuses are first loaded. 

-->
<BlockLangDef>

  <BlockConnectorShapes>
    <BlockConnectorShape shape-type="number" shape-number="1"/>
    <BlockConnectorShape shape-type="number-list" shape-number="2"/>
    <BlockConnectorShape shape-type="number-inv" shape-number="3"/>
    <BlockConnectorShape shape-type="boolean" shape-number="4"/>
    <BlockConnectorShape shape-type="boolean-list" shape-number="5"/>
    <BlockConnectorShape shape-type="boolean-inv" shape-number="6"/>
    <BlockConnectorShape shape-type="string" shape-number="7"/>
    <BlockConnectorShape shape-type="string-list" shape-number="8"/>
    <BlockConnectorShape shape-type="string-inv" shape-number="9"/>
    <BlockConnectorShape shape-type="poly" shape-number="10"/>
    <BlockConnectorShape shape-type="poly-list" shape-number="11"/>
    <BlockConnectorShape shape-type="poly-inv" shape-number="12"/>
    <BlockConnectorShape shape-type="proc-param" shape-number="13"/>
    <BlockConnectorShape shape-type="cmd" shape-number="14"/>
  </BlockConnectorShapes>
  
  <BlockGenuses>
  
  		<!-- Stub Genuses 
			Do not remove unless you would like to remove the stub feature all together
		-->
		
		<BlockGenus name="namer" kind="data" initlabel="bg.getter" color="142 160 210" >
			<description>
				<text>
					Reports the name of the loop.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="string-inv" position-type="mirror"></BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		
		<BlockGenus name="getter" kind="data" initlabel="bg.getter" color="0 0 0" >
			<description>
				<text>
					Reports the value of the variable.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="poly" position-type="mirror"></BlockConnector>
			</BlockConnectors>
<!-- 			<LangSpecProperties>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties> -->	
		</BlockGenus>
		
		<BlockGenus name="setter" kind="command" initlabel="bg.setter" color="0 0 0" label-prefix="set ">
			<description>
				<text>
					Sets the value of the variable.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="poly" position-type="single" is-expandable="yes"></BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		
		<BlockGenus name="caller" kind="command" initlabel="bg.caller" color="0 0 0">
			<description>
				<text>
					Calls the procedure of the specified name.
				</text>
			</description>
		</BlockGenus>

		<BlockGenus name="inc" kind="command" initlabel="bg.inc" color="0 0 0" label-prefix="inc ">
			<description>
				<text>
					Increments the value of the variable number.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="number" position-type="single"></BlockConnector>
			</BlockConnectors>		
		</BlockGenus>
		
		<BlockGenus name="agent" kind="function" initlabel="bg.agent" color="0 0 0" label-suffix=" of" is-starter="yes" is-terminator="yes">
			<description>
				<text>
					Gets the value of the variable of the agent ID.
				</text>
			</description>
			<BlockConnectors>
			    <BlockConnector connector-kind="plug" connector-type="poly" position-type="single"></BlockConnector>
				<BlockConnector label="who" connector-kind="socket" connector-type="number" position-type="single"></BlockConnector>
			</BlockConnectors>	
			<LangSpecProperties>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>			
		</BlockGenus>
  
  
  <!--Loop-->
    <BlockGenus name="loop" kind="command" color="240 240 240" initlabel="bg.loop" is-starter="yes" is-terminator="yes" label-unique="yes">
      <description>
	<text>This is the main loop of the program. It becomes the idle task in multithreading mode (priority = 0).</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="cmd" connector-kind="socket" label="do" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="loop//" kind="command" color="200 200 200" initlabel="bg.loop//" is-starter="yes" is-terminator="yes" label-unique="yes" editable-label="yes">
      <description>
	<text>Task used in a multitasking mode with fixed priority preemptive scheduling.</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.priority" >
	  <DefaultArg genus-name="number" label="1" />
	</BlockConnector>
	<BlockConnector connector-type="cmd" connector-kind="socket" label="do" />
      </BlockConnectors>
    <Stubs>
		<Stub stub-genus="namer">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-local"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>	
		</Stub>
	</Stubs>
	<LangSpecProperties>
		<LangSpecProperty key="type" value="string" ></LangSpecProperty>
	</LangSpecProperties>	
    </BlockGenus>
    
    <BlockGenus name="resume" kind="command" color="200 200 200" initlabel="bg.resume">
      <description>
	<text>Resumes the quoted task.</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="string-inv" connector-kind="socket" label="bc.task" >
	  <DefaultArg genus-name="alltasks" label="All tasks" />
	</BlockConnector>
	  </BlockConnectors>
    </BlockGenus>

    <BlockGenus name="suspend" kind="command" color="200 200 200" initlabel="bg.suspend">
      <description>
	<text>Suspends the quoted task.</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="string-inv" connector-kind="socket" label="bc.task" >
	  <DefaultArg genus-name="alltasks" label="All tasks" />
	</BlockConnector>
	  </BlockConnectors>
    </BlockGenus>

    <BlockGenus name="delay//" kind="command" color="200 200 200" initlabel="bg.delay//">
      <description>
	<text>Delay a task for a given time in milliseconds.</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.milliseconds">
	  <DefaultArg genus-name="number" label="1000" />
	</BlockConnector>
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="delay-until//" kind="command" color="200 200 200" initlabel="bg.delay-until//">
      <description>
	<text>Execute a task at a given period in milliseconds.</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.milliseconds">
	  <DefaultArg genus-name="number" label="1000" />
	</BlockConnector>
      </BlockConnectors>
    </BlockGenus>
    
	<BlockGenus name="all" kind="data" color="200 200 200" initlabel="bg.all" editable-label="no">
		<description>
			<text>All other tasks except this one and all interrupts.</text>
		</description>
		<BlockConnectors>
			<BlockConnector connector-kind="plug" connector-type="string-inv" position-type="mirror">
	  <DefaultArg genus-name="string" label="All tasks and INTs"/>
	  		</BlockConnector>
		</BlockConnectors>
		<LangSpecProperties>
			<LangSpecProperty key="vm-cmd-name" value="eval-num"></LangSpecProperty>
			<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
		</LangSpecProperties>
	</BlockGenus> 

	<BlockGenus name="alltasks" kind="data" color="200 200 200" initlabel="bg.alltasks" editable-label="no">
		<description>
			<text>All other tasks except this one.</text>
		</description>
		<BlockConnectors>
			<BlockConnector connector-kind="plug" connector-type="string-inv" position-type="mirror">
	  <DefaultArg genus-name="string" label="All tasks"/>
	  		</BlockConnector>
		</BlockConnectors>
		<LangSpecProperties>
			<LangSpecProperty key="vm-cmd-name" value="eval-num"></LangSpecProperty>
			<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
		</LangSpecProperties>
	</BlockGenus> 

<!-- 	<BlockGenus name="taker" kind="command" initlabel="bg.taker" color="0 0 0" label-prefix="">
		<description>
			<text>
				Take a semaphore.
			</text>
		</description>
		<BlockConnectors>
		    <BlockConnector connector-type="number" connector-kind="socket" label="bc.wait"  position-type="single">
	  			<DefaultArg genus-name="number" label="0" />
	  		</BlockConnector>
		</BlockConnectors>	
      	<LangSpecProperties>
			<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
		</LangSpecProperties>			
	</BlockGenus>

	<BlockGenus name="takeOK" kind="function" initlabel="bg.takeOK" color="0 0 0" is-starter="yes" is-terminator="yes">
		<description>
			<text>
				Take a semaphore.
			</text>
		</description>
		<BlockConnectors>
		    <BlockConnector connector-kind="plug" connector-type="boolean" position-type="single"></BlockConnector>
			<BlockConnector connector-type="number" connector-kind="socket" label="bc.wait"  position-type="single">
	  			<DefaultArg genus-name="number" label="0" />
	  		</BlockConnector>
		</BlockConnectors>	
		<LangSpecProperties>
			<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
		</LangSpecProperties>			
	</BlockGenus>

    <BlockGenus name="semaphore" kind="command" color="200 200 200" initlabel="bg.semaphore-give" label-unique="yes" editable-label="yes">
      <description>
	<text>Give a semaphore</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.type">
	  <DefaultArg genus-name="number" label="1" />
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.wait">
	  <DefaultArg genus-name="number" label="0" />
	</BlockConnector>
	  </BlockConnectors>
    <Stubs>
		<Stub stub-genus="takeOK">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-local"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>	
      		<Images>
				<Image block-location="northwest" >
	  				<FileLocation>com/ardublock/block/semaphore_rouge.jpg</FileLocation>
				</Image>
      		</Images>
		</Stub>
		<Stub stub-genus="taker">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-local"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>
			<Images>
				<Image block-location="northwest" >
	 		 		<FileLocation>com/ardublock/block/semaphore_rouge.jpg</FileLocation>
				</Image>
      		</Images>
		</Stub>
	</Stubs>
      <Images>
	<Image block-location="northwest" >
	  <FileLocation>com/ardublock/block/semaphore_vert.jpg</FileLocation>
	</Image>
      </Images>
	<LangSpecProperties>
		<LangSpecProperty key="type" value="string" ></LangSpecProperty>
	</LangSpecProperties>	
    </BlockGenus> -->
    
	<BlockGenus name="semhandle" kind="function" color="200 200 200" initlabel="bg.semaphore">
		<description>
			<text>Semaphore handle.</text>
		</description>
		<BlockConnectors>
			<BlockConnector connector-kind="plug" connector-type="boolean-inv"></BlockConnector>
			<BlockConnector connector-kind="socket" connector-type="number" label="bc.wait"></BlockConnector>
		</BlockConnectors>
	</BlockGenus> 

	<BlockGenus name="semdeclare" kind="variable" color="200 200 200" initlabel="bg.semdeclare" is-starter="yes" is-terminator="yes" editable-label="yes" label-unique="yes">
		<description>
			<text>Declare a semaphore.</text>
		</description>
		<BlockConnectors>
			<BlockConnector connector-kind="socket" connector-type="number" label="bc.type">
				<DefaultArg genus-name="number" label="1" />
			</BlockConnector>
		</BlockConnectors>
    	<Stubs>
			<Stub stub-genus="semhandle"></Stub>
		</Stubs>
      	<Images>
			<Image block-location="northwest" >
	  			<FileLocation>com/ardublock/block/semaphore.jpg</FileLocation>
			</Image>
      	</Images>
	</BlockGenus>

	<BlockGenus name="semgive" kind="command" initlabel="bg.semgive" color="200 200 200" label-prefix="">
		<description>
			<text>
				Give a semaphore.
			</text>
		</description>
		<BlockConnectors>
		    <BlockConnector connector-type="boolean-inv" connector-kind="socket" label="bc.sem"  position-type="single"></BlockConnector>
		</BlockConnectors>	
      	<Images>
			<Image block-location="west" >
	  			<FileLocation>com/ardublock/block/semaphore_vert.jpg</FileLocation>
			</Image>
      	</Images>
      	<LangSpecProperties>
			<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
		</LangSpecProperties>			
	</BlockGenus>

	<BlockGenus name="semtake" kind="command" initlabel="bg.semtake" color="200 200 200" label-prefix="">
		<description>
			<text>
				Take a semaphore.
			</text>
		</description>
		<BlockConnectors>
		    <BlockConnector connector-type="boolean-inv" connector-kind="socket" label="bc.sem"  position-type="single"></BlockConnector>
		</BlockConnectors>	
      	<Images>
			<Image block-location="west" >
	  			<FileLocation>com/ardublock/block/semaphore_rouge.jpg</FileLocation>
			</Image>
      	</Images>
      	<LangSpecProperties>
			<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
		</LangSpecProperties>			
	</BlockGenus>

	<BlockGenus name="semtakeOK" kind="function" initlabel="bg.takeOK" color="200 200 200" is-starter="yes" is-terminator="yes">
		<description>
			<text>
				Take a semaphore.
			</text>
		</description>
		<BlockConnectors>
		    <BlockConnector connector-kind="plug" connector-type="boolean" position-type="single"></BlockConnector>
			<BlockConnector connector-type="boolean-inv" connector-kind="socket" label="bc.sem"  position-type="single"></BlockConnector>
		</BlockConnectors>	
      	<Images>
			<Image block-location="west" >
	  			<FileLocation>com/ardublock/block/semaphore_rouge.jpg</FileLocation>
			</Image>
      	</Images>
		<LangSpecProperties>
			<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
		</LangSpecProperties>			
	</BlockGenus>

    

	<BlockGenus name="queuestack" kind="function" color="200 200 200" initlabel="bg.queuestack">
		<description>
			<text>Queue handle.</text>
		</description>
		<BlockConnectors>
			<BlockConnector connector-kind="plug" connector-type="number-inv"></BlockConnector>
			<BlockConnector connector-kind="socket" connector-type="number" label="bc.wait"></BlockConnector>
		</BlockConnectors>
	</BlockGenus> 

	<BlockGenus name="qhandle" kind="variable" color="200 200 200" initlabel="bg.qhandle" is-starter="yes" is-terminator="yes" editable-label="yes" label-unique="yes">
		<description>
			<text>Declare a queue.</text>
		</description>
		<BlockConnectors>
			<BlockConnector connector-kind="socket" connector-type="number" label="bc.length">
				<DefaultArg genus-name="number" label="1" />
			</BlockConnector>
		</BlockConnectors>
    	<Stubs>
			<Stub stub-genus="queuestack"></Stub>
		</Stubs>
		<Images>
			<Image block-location="northwest" >
	  			<FileLocation>com/ardublock/block/queue2.jpg</FileLocation>
			</Image>
      	</Images>	
	</BlockGenus>

	<BlockGenus name="qcmd-sendtoback" kind="command" color="200 200 200" initlabel="bg.qcmd-sendtoback">
		<description>
			<text>Queue management.\nPost the IN item on the queue</text>
		</description>
		<BlockConnectors>
			<BlockConnector connector-kind="socket" connector-type="number-inv" label="bc.queue"></BlockConnector>
			<BlockConnector connector-kind="socket" connector-type="poly" label="bc.FIFO"></BlockConnector>
		</BlockConnectors>
		<Images>
			<Image block-location="northwest" >
	  			<FileLocation>com/ardublock/block/queue2.jpg</FileLocation>
			</Image>
      	</Images>	
	</BlockGenus> 

 	<BlockGenus name="qcmd-sendtofront" kind="command" color="200 200 200" initlabel="bg.qcmd-sendtofront">
		<description>
			<text>Queue management.</text>
		</description>
		<BlockConnectors>
			<BlockConnector connector-kind="socket" connector-type="number-inv" label="bc.queue"></BlockConnector>
			<BlockConnector connector-kind="socket" connector-type="poly" label="bc.FIFO"></BlockConnector>
		</BlockConnectors>
	</BlockGenus> 

	<BlockGenus name="qcmd-receive" kind="command" color="200 200 200" initlabel="bg.qcmd-receive">
		<description>
			<text>Queue management.</text>
		</description>
		<BlockConnectors>
			<BlockConnector connector-kind="socket" connector-type="number-inv" label="bc.queue"></BlockConnector>
			<BlockConnector connector-kind="socket" connector-type="poly" label="bc.FIFO"></BlockConnector>
		</BlockConnectors>
	</BlockGenus> 

	<BlockGenus name="qcmd-peek" kind="command" color="200 200 200" initlabel="bg.qcmd-peek">
		<description>
			<text>Queue management.</text>
		</description>
		<BlockConnectors>
			<BlockConnector connector-kind="socket" connector-type="number-inv" label="bc.queue"></BlockConnector>
			<BlockConnector connector-kind="socket" connector-type="poly" label="bc.FIFO"></BlockConnector>
		</BlockConnectors>
	</BlockGenus> 

	<BlockGenus name="qcmd-overwrite" kind="command" color="200 200 200" initlabel="bg.qcmd-overwrite">
		<description>
			<text>Queue management.</text>
		</description>
		<BlockConnectors>
			<BlockConnector connector-kind="socket" connector-type="number-inv" label="bc.queue"></BlockConnector>
			<BlockConnector connector-kind="socket" connector-type="poly" label="bc.FIFO"></BlockConnector>
		</BlockConnectors>
	</BlockGenus> 
	
	<BlockGenus name="qcmd-reset" kind="command" color="200 200 200" initlabel="bg.qcmd-reset">
		<description>
			<text>Queue management.</text>
		</description>
		<BlockConnectors>
			<BlockConnector connector-kind="socket" connector-type="number-inv" label="bc.queue"></BlockConnector>
			<BlockConnector connector-kind="socket" connector-type="poly" label="bc.FIFO"></BlockConnector>
		</BlockConnectors>
	</BlockGenus>
	
	<BlockGenus name="qOK-sendtoback" kind="data" color="200 200 200" initlabel="bg.qOK-sendtoback">
		<description>
			<text>Queue management.</text>
		</description>
		<BlockConnectors>
			<BlockConnector connector-kind="plug" connector-type="boolean"></BlockConnector>
			<BlockConnector connector-kind="socket" connector-type="number-inv" label="bc.queue"></BlockConnector>
			<BlockConnector connector-kind="socket" connector-type="poly" label="bc.FIFO"></BlockConnector>
		</BlockConnectors>
		<Images>
			<Image block-location="northwest" >
	  			<FileLocation>com/ardublock/block/queue2.jpg</FileLocation>
			</Image>
      </Images>	
	</BlockGenus> 

 	<BlockGenus name="qOK-sendtofront" kind="data" color="200 200 200" initlabel="bg.qOK-sendtofront">
		<description>
			<text>Queue management.</text>
		</description>
		<BlockConnectors>
			<BlockConnector connector-kind="plug" connector-type="boolean"></BlockConnector>
			<BlockConnector connector-kind="socket" connector-type="number-inv" label="bc.queue"></BlockConnector>
			<BlockConnector connector-kind="socket" connector-type="poly" label="bc.FIFO"></BlockConnector>
		</BlockConnectors>
	</BlockGenus> 

	<BlockGenus name="qOK-receive" kind="data" color="200 200 200" initlabel="bg.qOK-receive">
		<description>
			<text>Queue management.</text>
		</description>
		<BlockConnectors>
			<BlockConnector connector-kind="plug" connector-type="boolean"></BlockConnector>
			<BlockConnector connector-kind="socket" connector-type="number-inv" label="bc.queue"></BlockConnector>
			<BlockConnector connector-kind="socket" connector-type="poly" label="bc.FIFO"></BlockConnector>
		</BlockConnectors>
	</BlockGenus> 

	<BlockGenus name="qOK-peek" kind="data" color="200 200 200" initlabel="bg.qOK-peek">
		<description>
			<text>Queue management.</text>
		</description>
		<BlockConnectors>
			<BlockConnector connector-kind="plug" connector-type="boolean"></BlockConnector>
			<BlockConnector connector-kind="socket" connector-type="number-inv" label="bc.queue"></BlockConnector>
			<BlockConnector connector-kind="socket" connector-type="poly" label="bc.FIFO"></BlockConnector>
		</BlockConnectors>
	</BlockGenus> 

	<BlockGenus name="qOK-overwrite" kind="data" color="200 200 200" initlabel="bg.qOK-overwrite">
		<description>
			<text>Queue management.</text>
		</description>
		<BlockConnectors>
			<BlockConnector connector-kind="plug" connector-type="boolean"></BlockConnector>
			<BlockConnector connector-kind="socket" connector-type="number-inv" label="bc.queue"></BlockConnector>
			<BlockConnector connector-kind="socket" connector-type="poly" label="bc.FIFO"></BlockConnector>
		</BlockConnectors>
	</BlockGenus> 
	
	<BlockGenus name="qOK-reset" kind="data" color="200 200 200" initlabel="bg.qOK-reset">
		<description>
			<text>Queue management.</text>
		</description>
		<BlockConnectors>
			<BlockConnector connector-kind="plug" connector-type="boolean"></BlockConnector>
			<BlockConnector connector-kind="socket" connector-type="number-inv" label="bc.queue"></BlockConnector>
			<BlockConnector connector-kind="socket" connector-type="poly" label="bc.FIFO"></BlockConnector>
		</BlockConnectors>
	</BlockGenus>
	
	
    
  <!--Control-->
    
    <BlockGenus name="if" kind="command" initlabel="bg.if" color="255 221 0">
      <description>
	<text>
	  If <arg n="1" /> is true, the agent will run the blocks attached to <arg n="2" />
	</text>
	<arg-description n="1" name="test">
	  The condition being tested.
	</arg-description>
	
	<arg-description n="2" name="then">
	  The set of instructions that is done when the condition is true.
	</arg-description>
      </description>
      <BlockConnectors>
	<BlockConnector label="bc.test" connector-kind="socket" connector-type="boolean" />
	<BlockConnector label="bc.then" connector-kind="socket" connector-type="cmd" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="ifelse" kind="command" initlabel="bg.ifelse" color="255 221 0">
      <description>
	<text>
	  Does the first set of commands if the condition specified is true, otherwise it will do the second set of commands.
	</text>
	<arg-description n="1" name="test">
	  The condition being tested.
	</arg-description>
	
	<arg-description n="2" name="then">
	  The set of instructions that is done when the condition is true.
	</arg-description>
	
	<arg-description n="3" name="else">
	  The set of instructions that is done when the condition is false.
	</arg-description>
      </description>
      <BlockConnectors>
	<BlockConnector label="bc.test" connector-kind="socket" connector-type="boolean" />
	<BlockConnector label="bc.then" connector-kind="socket" connector-type="cmd" />
	<BlockConnector label="bc.else" connector-kind="socket" connector-type="cmd" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="while" kind="command" initlabel="bg.while" color="255 221 0">
      <description>
	<text>
	  While Block
	</text>
      </description>
      <BlockConnectors>
	<BlockConnector label="bc.condition" connector-kind="socket" connector-type="boolean" />
	<BlockConnector label="" connector-kind="socket" connector-type="cmd" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="dowhile" kind="command" initlabel="bg.dowhile" color="255 221 0">
      <description>
	<text>
	  Do ... while Block
	</text>
      </description>
      <BlockConnectors>
	<BlockConnector label="" connector-kind="socket" connector-type="cmd" />
	<BlockConnector label="bc.condition" connector-kind="socket" connector-type="boolean" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="repeat" kind="command" color="255 221 0" initlabel="bg.repeat">
    <description>
	<text>Repeat</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket">
	  <DefaultArg genus-name="number" label="5"/>
	</BlockConnector>
	<BlockConnector connector-type="cmd" connector-kind="socket"/>
      </BlockConnectors>
   </BlockGenus>
    
    <BlockGenus name="for" kind="command" color="255 221 0" initlabel="bg.for">
      <description>
	<text>
	  Counter
	</text>
      </description>
      <BlockConnectors>
	<BlockConnector label="variable" connector-type="number" connector-kind="socket">
	  <DefaultArg genus-name="variable_number" label="i" />
	</BlockConnector>
	<BlockConnector label="from" connector-kind="socket" connector-type="number">
	  <DefaultArg genus-name="number" label="0" />
	</BlockConnector>
	<BlockConnector label="to" connector-kind="socket" connector-type="number">
	  <DefaultArg genus-name="number" label="10" />
	</BlockConnector>
	<BlockConnector label="step" connector-kind="socket" connector-type="number">
	  <DefaultArg genus-name="number" label="1" />
	</BlockConnector>
	<BlockConnector connector-kind="socket" connector-type="cmd" />
      </BlockConnectors>
   </BlockGenus>
      
	<BlockGenus name="switch" kind="command" color="255 221 0" initlabel="bg.switch">
		<description>
			<text>Performs one of a set of actions based on a value.</text>
			<arg-description n="1" name="value">The value to compare against.</arg-description>
			<arg-description n="2" name="case">A possibility for the value.</arg-description>
			<arg-description n="3" name="do">The set of instructions that is done in this case.</arg-description>
			<arg-description n="4" name="default">The set of instructions that is done in the default case.</arg-description>
		</description>
		<BlockConnectors>
			<BlockConnector label="value" connector-kind="socket" connector-type="poly"></BlockConnector>
			<BlockConnector label="case" connector-kind="socket" connector-type="poly" is-expandable="yes" expand-group="yes"></BlockConnector>
			<BlockConnector label="do" connector-kind="socket" connector-type="cmd" is-expandable="no" expand-group="yes"></BlockConnector>
			<BlockConnector label="default" connector-kind="socket" connector-type="cmd"></BlockConnector>
		</BlockConnectors>
		<LangSpecProperties>
			<LangSpecProperty key="vm-cmd-name" value="switch"></LangSpecProperty>
		</LangSpecProperties>
	</BlockGenus>
   
    <BlockGenus name="break" kind="command" color="255 221 0" initlabel="bg.break">
    	<description>
	<text>Exit from a do, for, or while loop, or a switch statement.</text>
      </description>
   </BlockGenus>
    
    <BlockGenus name="continue" kind="command" color="255 221 0" initlabel="bg.continue">
    	<description>
	<text>Skip the rest of the current iteration of a loop do, for or while.</text>
      </description>
   </BlockGenus>
    

<!--Pins-->

<!--   I/O pins-->
     <BlockGenus name="pin-write-digital" kind="command" color="77 191 169" initlabel="bg.pin-write-digital">
      <description>
	<text>write digital to pin</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="#">
	  <DefaultArg genus-name="pin_00" label="0" />
	</BlockConnector>
	<BlockConnector connector-type="boolean" connector-kind="socket">
	  <DefaultArg genus-name="digital-high" label="HIGH" />
	</BlockConnector>
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="pin-read-digital" kind="data" color="77 191 169" initlabel="bg.pin-read-digital">
      <description>
	<text>Read digital value from pin</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="#">
	  <DefaultArg genus-name="pin_00" label="0" />
	</BlockConnector>
	<BlockConnector connector-type="boolean" connector-kind="plug" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="pin-read-analog" kind="data" color="77 191 169" initlabel="bg.pin-read-analog">
      <description>
	<text>Read analog value from pin</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="#">
	  <DefaultArg genus-name="pin_A0" label="0" />
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="plug" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="pin-write-analog" kind="command" color="77 191 169" initlabel="bg.pin-write-analog">
      <description>
	<text>write analog to pin</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="#">
	  <DefaultArg genus-name="pin_pwm3" label="3" />
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket">
	  <DefaultArg genus-name="number" label="255" />
	</BlockConnector>
      </BlockConnectors>
    </BlockGenus>
    
    <!--   I/O avanced-->
    <BlockGenus name="tone" kind="command" color="77 191 169" initlabel="tone">
      <description>
	<text>Generates a square wave of the specified frequency (and 50% duty cycle) on a pin. </text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="number" label="8" />
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.frequency">
	  <DefaultArg genus-name="number" label="440" />
	</BlockConnector>
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="tone_time" kind="command" color="77 191 169" initlabel="tone">
      <description>
	<text>Generates a square wave of the specified frequency (and 50% duty cycle) on a pin. </text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="number" label="8" />
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.frequency">
	  <DefaultArg genus-name="number" label="440" />
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.milliseconds">
	  <DefaultArg genus-name="number" label="1000" />
	</BlockConnector>
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="no_tone" kind="command" color="77 191 169" initlabel="noTone">
      <description>
	<text>Stops the generation of a square wave triggered by tone().</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="number" label="8" />
	</BlockConnector>
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="pulsein" kind="function" color="77 191 169" initlabel="pulseIn">
      <description>
	<text>Reads a pulse (either HIGH or LOW) on a pin.</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug"></BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="#">
	  <DefaultArg genus-name="pin_00" label="0" />
	</BlockConnector>
	<BlockConnector connector-type="boolean" connector-kind="socket">
	  <DefaultArg genus-name="digital-high" label="HIGH" />
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.microseconds">
	  <DefaultArg genus-name="number" label="1000000" />
	</BlockConnector>
<!-- 	<BlockConnector connector-type="number" connector-kind="socket" label="bc.timeout" position-type="bottom"></BlockConnector> -->
      </BlockConnectors>
    </BlockGenus>
    
    <!--   digital pins-->
    <BlockGenus name="pin_00" kind="data" color="220 49 147" initlabel="bg.pin_00" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="pin_01" kind="data" color="220 49 147" initlabel="bg.pin_01" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="pin_02" kind="data" color="220 49 147" initlabel="bg.pin_02" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="pin_03" kind="data" color="220 49 147" initlabel="bg.pin_03" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="pin_04" kind="data" color="220 49 147" initlabel="bg.pin_04" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="pin_05" kind="data" color="220 49 147" initlabel="bg.pin_05" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="pin_06" kind="data" color="220 49 147" initlabel="bg.pin_06" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="pin_07" kind="data" color="220 49 147" initlabel="bg.pin_07" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="pin_08" kind="data" color="220 49 147" initlabel="bg.pin_08" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="pin_09" kind="data" color="220 49 147" initlabel="bg.pin_09" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="pin_10" kind="data" color="220 49 147" initlabel="bg.pin_10" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="pin_11" kind="data" color="220 49 147" initlabel="bg.pin_11" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="pin_12" kind="data" color="220 49 147" initlabel="bg.pin_12" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="pin_13" kind="data" color="220 49 147" initlabel="bg.pin_13" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="pin_14" kind="data" color="220 49 147" initlabel="bg.pin_14" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="pin_15" kind="data" color="220 49 147" initlabel="bg.pin_15" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="pin_16" kind="data" color="220 49 147" initlabel="bg.pin_16" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="pin_17" kind="data" color="220 49 147" initlabel="bg.pin_17" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="pin_18" kind="data" color="220 49 147" initlabel="bg.pin_18" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="pin_19" kind="data" color="220 49 147" initlabel="bg.pin_19" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <!--   analog pins-->
    <BlockGenus name="pin_A0" kind="data" color="220 49 147" initlabel="bg.pin_00" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="pin_A1" kind="data" color="220 49 147" initlabel="bg.pin_01" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="pin_A2" kind="data" color="220 49 147" initlabel="bg.pin_02" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="pin_A3" kind="data" color="220 49 147" initlabel="bg.pin_03" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="pin_A4" kind="data" color="220 49 147" initlabel="bg.pin_04" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="pin_A5" kind="data" color="220 49 147" initlabel="bg.pin_05" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <!--   PWM pins-->
    <BlockGenus name="pin_pwm3" kind="data" color="220 49 147" initlabel="bg.pin_03" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="pin_pwm5" kind="data" color="220 49 147" initlabel="bg.pin_05" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="pin_pwm6" kind="data" color="220 49 147" initlabel="bg.pin_06" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="pin_pwm9" kind="data" color="220 49 147" initlabel="bg.pin_09" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="pin_pwm10" kind="data" color="220 49 147" initlabel="bg.pin_10" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="pin_pwm11" kind="data" color="220 49 147" initlabel="bg.pin_11" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
     
    <!-- interrupt pins -->
    <BlockGenus name="pin_int0" kind="data" color="220 49 147" initlabel="bg.pin_2" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="pin_int1" kind="data" color="220 49 147" initlabel="bg.pin_3" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
     
     
	<!--Time-->
	
	<BlockGenus name="delay" kind="command" color="56 156 233" initlabel="bg.delay">
      <description>
	<text>program delay in x milliseconds</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.milliseconds">
	  <DefaultArg genus-name="number" label="1000" />
	</BlockConnector>
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="delay_microseconds" kind="command" color="56 156 233" initlabel="bg.delay_microseconds">
      <description>
	<text>program delay in x milliseconds</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.microseconds">
	  <DefaultArg genus-name="number" label="1000" />
	</BlockConnector>
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="millis" kind="data" color="56 156 233" initlabel="bg.millis">
      <description>
	<text>Returns the number of milliseconds since the Arduino board began running the current program.</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="micros" kind="data" color="56 156 233" initlabel="bg.micros">
      <description>
	<text>Returns the number of microseconds since the Arduino board began running the current program.</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
	<BlockGenus name="procedure_interrupt" kind="command" initlabel="procedure_interrupt" editable-label="yes" label-unique="yes" page-label-enabled="no" is-starter="yes" color="116 83 244">
		<description>
			<text>
				Defines a section of blocks as a procedure called when an external interrupt occurs.
			</text>
		</description>
    	<BlockConnectors>
			<BlockConnector connector-type="number" connector-kind="socket" label="#"><!-- label="#"> -->
	  			<DefaultArg genus-name="pin_A2" label="2" /><!-- <DefaultArg genus-name="pin_int0" label="2" /> -->
			</BlockConnector>
			<BlockConnector connector-type="boolean" connector-kind="socket" label="mode">
	  			<DefaultArg genus-name="digital-change-INT" label="CHANGE" />
			</BlockConnector>
      	</BlockConnectors>
    <Stubs>
		<Stub stub-genus="namer">
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-local"></LangSpecProperty>
				<LangSpecProperty key="scope" value="local"></LangSpecProperty>
			</LangSpecProperties>	
		</Stub>
	</Stubs>
	<LangSpecProperties>
		<LangSpecProperty key="type" value="string" ></LangSpecProperty>
		<LangSpecProperty key="vm-cmd-name" value="eval-interrupt"></LangSpecProperty>
	</LangSpecProperties>
	</BlockGenus>
		
<!-- 	<BlockGenus name="detach_interrupt" kind="command" color="56 156 233" initlabel="bg.detach_interrupt">
      <description>
	<text>Turns off the given interrupt.</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="#">
	  <DefaultArg genus-name="pin_int0" label="2" />
	</BlockConnector>
      </BlockConnectors>
    </BlockGenus>
    
	<BlockGenus name="interrupt" kind="command" color="56 156 233" initlabel="bg.interrupt">
      <description>
	<text>Re-enables interrupts.</text>
      </description>
    </BlockGenus>
    
	<BlockGenus name="no_interrupt" kind="command" color="56 156 233" initlabel="bg.no_interrupt">
      <description>
	<text>Disables interrupts.</text>
      </description>
    </BlockGenus>
 -->    
 
  	<BlockGenus name="attach_interrupt" kind="command" color="116 83 244" initlabel="bg.attach_interrupt">
      <description>
	<text>Turns off the given interrupt.</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="string-inv" connector-kind="socket" label="bc.int" >
	  <DefaultArg genus-name="allints" label="All INTs" />
	</BlockConnector>
	  </BlockConnectors>
    </BlockGenus>
    
  	<BlockGenus name="detach_interrupt" kind="command" color="116 83 244" initlabel="bg.detach_interrupt">
      <description>
	<text>Turns off the given interrupt.</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="string-inv" connector-kind="socket" label="bc.int" >
	  <DefaultArg genus-name="allints" label="All INTs" />
	</BlockConnector>
	  </BlockConnectors>
    </BlockGenus>
    
	<BlockGenus name="allints" kind="data" color="116 83 244" initlabel="bg.allints" editable-label="no">
		<description>
			<text>All interrupts</text>
		</description>
		<BlockConnectors>
			<BlockConnector connector-kind="plug" connector-type="string-inv" position-type="mirror">
	  <DefaultArg genus-name="string" label="All INTs"/>
	  		</BlockConnector>
		</BlockConnectors>
		<LangSpecProperties>
			<LangSpecProperty key="vm-cmd-name" value="eval-num"></LangSpecProperty>
			<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
		</LangSpecProperties>
	</BlockGenus> 

<!-- 	<BlockGenus name="interrupt" kind="command" color="56 156 233" initlabel="bg.interrupt">
      <description>
	<text>Re-enables interrupts.</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="string-inv" connector-kind="socket">
	  <DefaultArg genus-name="all" label="all" />
	</BlockConnector>
	  </BlockConnectors>
    </BlockGenus>
    
	<BlockGenus name="no_interrupt" kind="command" color="56 156 233" initlabel="bg.no_interrupt">
      <description>
	<text>Disables interrupts.</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="string-inv" connector-kind="socket">
	  <DefaultArg genus-name="all" label="all" />
	</BlockConnector>
	  </BlockConnectors>
    </BlockGenus> -->
    
    <!--Constants/Variables-->
    
    <!--   constants-->
    <BlockGenus name="digital-high" kind="data" color="208 10 16" initlabel="bg.digital-high">
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="digital-low" kind="data" color="208 10 16" initlabel="bg.digital-low">
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="digital-on" kind="data" color="208 10 16" initlabel="bg.digital-on">
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="digital-off" kind="data" color="208 10 16" initlabel="bg.digital-off">
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="digital-low-INT" kind="data" color="208 10 16" initlabel="bg.digital-low-INT">
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
     <BlockGenus name="digital-change-INT" kind="data" color="208 10 16" initlabel="bg.digital-change-INT">
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="digital-rising-INT" kind="data" color="208 10 16" initlabel="bg.digital-rising-INT">
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="digital-falling-INT" kind="data" color="208 10 16" initlabel="bg.digital-falling-INT">
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="digital-normal//" kind="data" color="208 10 16" initlabel="bg.digital-normal">
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="digital-high//" kind="data" color="208 10 16" initlabel="bg.digital-normal">
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="digital-low//" kind="data" color="208 10 16" initlabel="bg.digital-normal">
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="true" kind="data" initlabel="bg.true" color="208 10 16">
      <description>
	<text>
	  Reports the boolean true.
	</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-kind="plug" connector-type="boolean" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="false" kind="data" initlabel="bg.false" color="208 10 16">
      <description>
	<text>
	  Reports the boolean false.
	</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-kind="plug" connector-type="boolean" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="number" kind="data" color="208 10 16" initlabel="bg.number" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="real_number" kind="data" color="208 10 16" initlabel="bg.number" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="convert_real" kind="data" color="208 10 16" initlabel="bg.convert2real" editable-label="no">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="single" />
	<BlockConnector connector-type="number" connector-kind="socket" position-type="single" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="string" kind="data" color="208 10 16" initlabel="bg.string" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="string" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="rien" kind="data" color="149 193 31" initlabel="bg.rien" editable-label="yes">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <!--   data types-->
    <BlockGenus name="variable_number" kind="data" initlabel="bg.variable_number" editable-label="yes" color="255 0 255">
      <description>
	<text>Number variable</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>

    <BlockGenus name="variable_real_number" kind="data" initlabel="bg.variable_real_number" editable-label="yes" color="215 42 90">
      <description>
	<text>Float variable</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>

    <BlockGenus name="variable_digital" kind="data" initlabel="bg.variable_digital" editable-label="yes" is-label-value="yes" color="255 0 255">
      <description>
	<text>Digital variable</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="variable_string" kind="data" initlabel="bg.variable_string" editable-label="yes" is-label-value="yes" color="255 0 255">
      <description>
	<text>Digital variable</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="string" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="variable_number_list" kind="data" initlabel="bg.variable_number_list" editable-label="yes" color="255 0 255">
      <description>
	<text>Number list variable</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number-list" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>

    <BlockGenus name="variable_digital_list" kind="data" initlabel="bg.variable_digital_list" editable-label="yes" is-label-value="yes" color="255 0 255">
      <description>
	<text>Digital list variable</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="boolean-list" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="variable_string_list" kind="data" initlabel="bg.variable_string_list" editable-label="yes" is-label-value="yes" color="255 0 255">
      <description>
	<text>String list variable</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="string-list" connector-kind="plug" position-type="mirror" />
      </BlockConnectors>
    </BlockGenus>
    

    <!--   conversion-->


    <!--List-->
      
		<BlockGenus name="list" kind="function" initlabel="bg.list" color="255 127 0">
			<description>
				<text>
					Creates a list from N items.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug" connector-type="poly-list" is-expandable="no" expand-group="no"></BlockConnector>
				<BlockConnector label="" connector-kind="socket" connector-type="poly" is-expandable="yes" position-type="single" expand-group="yes"></BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		
		<BlockGenus name="add-to-list" kind="command" initlabel="bg.add-to-list" color="255 127 0">
			<description>
				<text>
					Adds an item to a list.
				</text>
				<arg-description n="1" name="list" doc-name="list">
					The list
				</arg-description>
				<arg-description n="2" name="number" doc-name="number">
					The item to add to the list
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="list" connector-kind="socket" connector-type="poly-list"></BlockConnector>
				<BlockConnector label="index" connector-kind="socket" connector-type="number">
					<DefaultArg genus-name="number" label="0"/>
	  			</BlockConnector>
				<BlockConnector label="value" connector-kind="socket" connector-type="poly"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="sentence"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="length" kind="function" initlabel="bg.length" color="255 127 0">
			<description>
				<text>
					Retrieves the length of a list.
				</text>
				<arg-description n="1" name="list" doc-name="list">
					The list
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug" connector-type="number"></BlockConnector>
				<BlockConnector label="list" connector-kind="socket" connector-type="poly-list"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="length"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="first" kind="function" initlabel="bg.first" color="255 127 0">
			<description>
				<text>
					Retrieves the first item in a list.
				</text>
				<arg-description n="1" name="list" doc-name="list">
					The list
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug" connector-type="poly"></BlockConnector>
				<BlockConnector label="list" connector-kind="socket" connector-type="poly-list"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="first"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="get-list-item" kind="function" initlabel="bg.get-list-item" color="255 127 0">
			<description>
				<text>
					Retrieves an item from a list.
				</text>
				<arg-description n="1" name="list" doc-name="list">
					The list
				</arg-description>
				<arg-description n="2" name="index" doc-name="index">
					The index of the item to retrieve
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug" connector-type="poly"></BlockConnector>
				<BlockConnector label="list" connector-kind="socket" connector-type="poly-list"></BlockConnector>
				<BlockConnector label="index" connector-kind="socket" connector-type="number">
					<DefaultArg genus-name="number" label="0"/>
	  			</BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="item"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
    
    <!--Operators-->
   
   <!--   arithmetics-->
  	<BlockGenus name="addition" kind="function" initlabel="bg.addition" color="149 193 31">
      <description>
	<text>
	  Arithmetic operation.
	</text>
      </description>
      <BlockConnectors>
	<BlockConnector label="" connector-kind="plug" connector-type="number" position-type="mirror" />
	<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom" />
	<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="subtraction" kind="function" initlabel="bg.subtraction" color="149 193 31">
      <BlockConnectors>
	<BlockConnector label="" connector-kind="plug" connector-type="number" position-type="mirror" />
	<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom" />
	<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="multiplication" kind="function" initlabel="bg.multiplication" color="149 193 31">
      <BlockConnectors>
	<BlockConnector label="" connector-kind="plug" connector-type="number" position-type="mirror" />
	<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom" />
	<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="division" kind="function" initlabel="bg.division" color="149 193 31">
      <BlockConnectors>
	<BlockConnector label="" connector-kind="plug" connector-type="number" position-type="mirror" />
	<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom" />
	<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="modulo" kind="function" color="149 193 31" initlabel="bg.modulo">
      <BlockConnectors>
	<BlockConnector label="" connector-kind="plug" connector-type="number" position-type="mirror" />
	<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom" />
	<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="pow" kind="function" color="149 193 31" initlabel="bg.pow">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" label="" position-type="mirror"/>
	<BlockConnector connector-type="number" connector-kind="socket" label="" position-type="bottom" />
	<BlockConnector connector-type="number" connector-kind="socket" label="" position-type="bottom" />
      </BlockConnectors>
    </BlockGenus>
    
    <!--   comparison-->
    <BlockGenus name="equal" kind="function" color="149 193 31" initlabel="bg.equal">
      <description>
	<text>Comparison operation.</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" />
	<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
	<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
      </BlockConnectors>
    </BlockGenus>
    
  	<BlockGenus name="greater" kind="function" color="149 193 31" initlabel="bg.greater">
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" />
	<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
	<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="less" kind="function" color="149 193 31" initlabel="bg.less">
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" />
	<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
	<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="greater_equal" kind="function" color="149 193 31" initlabel="bg.greater_equal">
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" />
	<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
	<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="less_equal" kind="function" color="149 193 31" initlabel="bg.less_equal">
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" />
	<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
	<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="not_equal" kind="function" color="149 193 31" initlabel="bg.not_equal">
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" />
	<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
	<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
      </BlockConnectors>
    </BlockGenus>
    
    <!--   boolean-->
  	<BlockGenus name="and" kind="data" initlabel="bg.and" color="149 193 31">
      <description>
	<text>Boolean operation.</text>
      </description>
      <BlockConnectors>
	<BlockConnector label="" connector-kind="plug" connector-type="boolean" position-type="mirror" />
	<BlockConnector label="" connector-kind="socket" connector-type="boolean" position-type="bottom" />
	<BlockConnector label="" connector-kind="socket" connector-type="boolean" position-type="bottom" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="or" kind="function" initlabel="bg.or" color="149 193 31">
      <BlockConnectors>
	<BlockConnector label="" connector-kind="plug" connector-type="boolean" position-type="mirror" />
	<BlockConnector label="" connector-kind="socket" connector-type="boolean" position-type="bottom" />
	<BlockConnector label="" connector-kind="socket" connector-type="boolean" position-type="bottom" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="not" kind="function" initlabel="bg.not" color="149 193 31">
      <description>
	<text>Boolean operation.</text>
      </description>
      <BlockConnectors>
	<BlockConnector label="" connector-kind="plug" connector-type="boolean" />
	<BlockConnector label="" connector-kind="socket" connector-type="boolean" />
      </BlockConnectors>
    </BlockGenus>
    
    <!--   bitwise-->
    <BlockGenus name="bitwise_not" kind="function" color="149 193 31" initlabel="bg.bitwise_not">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
	<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
	<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="bitwise_and" kind="function" color="149 193 31" initlabel="bg.bitwise_and">
      <description>
	<text>Comparison operation.</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
	<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
	<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
      </BlockConnectors>
    </BlockGenus>
    
  	<BlockGenus name="bitwise_or" kind="function" color="149 193 31" initlabel="bg.bitwise_or">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
	<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
	<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="bitwise_xor" kind="function" color="149 193 31" initlabel="bg.bitwise_xor">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
	<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
	<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="bitwise_left" kind="function" color="149 193 31" initlabel="bg.bitwise_left">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
	<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
	<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="bitwise_right" kind="function" color="149 193 31" initlabel="bg.bitwise_right">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
	<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
	<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
      </BlockConnectors>
    </BlockGenus>
    
<!--   assignment-->
  	<!-- <BlockGenus name="setter_variable_number" kind="command" color="255 0 0" initlabel="bg.setter_variable_number">
      <description>
	<text>Assign a number variable</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.variable">
	  <DefaultArg genus-name="variable_number" label="var name" />
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.value">
	  <DefaultArg genus-name="number" label="0" />
	</BlockConnector>
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="setter_variable_digital" kind="command" color="255 0 0" initlabel="bg.setter_variable_digital">
      <description>
	<text>Assign a digital variable</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="socket" label="bc.variable">
	  <DefaultArg genus-name="variable_digital" label="variable name" />
	</BlockConnector>
	<BlockConnector connector-type="boolean" connector-kind="socket" label="bc.value">
	  <DefaultArg genus-name="" label="HIGH" />
	</BlockConnector>
      </BlockConnectors>
    </BlockGenus> -->
    
<!--     <BlockGenus name="set_var_number" kind="command" color="255 0 0" initlabel="bg.set_var_number">
      <description>
	<text>Assign a number variable</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.variable" >
	  <DefaultArg genus-name="compound_assignment" label="="/>
	</BlockConnector>
      </BlockConnectors>
    </BlockGenus> -->
    
    <BlockGenus name="set_number" kind="command" color="255 0 0" initlabel="bg.set_number">
      <description>
	<text>Assign a number variable</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.variable" >
	  <DefaultArg genus-name="variable_number" label="var"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.value" >
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
      </BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="set"></LangSpecProperty>
			</LangSpecProperties>
    </BlockGenus>
    
    <BlockGenus name="set_real_number" kind="command" color="215 42 90" initlabel="bg.set_number">
      <description>
	<text>Assign a real variable</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.variable" >
	  <DefaultArg genus-name="variable_real_number" label="var"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.value" >
	  <DefaultArg genus-name="real_number" label="1.0e0"/>
	</BlockConnector>
      </BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="set"></LangSpecProperty>
			</LangSpecProperties>
    </BlockGenus>
    
    <BlockGenus name="set_number_addition" kind="command" color="255 0 0" initlabel="bg.set_number_addition">
      <description>
	<text>Assign a number variable</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.variable" >
	  <DefaultArg genus-name="variable_number" label="var"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.value" >
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="set_number_subtraction" kind="command" color="255 0 0" initlabel="bg.set_number_subtraction">
      <description>
	<text>Assign a number variable</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.variable" >
	  <DefaultArg genus-name="variable_number" label="var"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.value" >
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="set_number_multiplication" kind="command" color="255 0 0" initlabel="bg.set_number_multiplication">
      <description>
	<text>Assign a number variable</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.variable" >
	  <DefaultArg genus-name="variable_number" label="var"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.value" >
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="set_number_division" kind="command" color="255 0 0" initlabel="bg.set_number_division">
      <description>
	<text>Assign a number variable</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.variable" >
	  <DefaultArg genus-name="variable_number" label="var"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.value" >
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="set_number_bitwiseand" kind="command" color="255 0 0" initlabel="bg.set_number_bitwiseand">
      <description>
	<text>Assign a number variable</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.variable" >
	  <DefaultArg genus-name="variable_number" label="var"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.value" >
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="set_number_bitwiseor" kind="command" color="255 0 0" initlabel="bg.set_number_bitwiseor">
      <description>
	<text>Assign a number variable</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.variable" >
	  <DefaultArg genus-name="variable_number" label="var"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.value" >
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="set_digital" kind="command" color="255 0 0" initlabel="bg.set_digital">
      <description>
	<text>Assign a digital variable</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="socket" label="bc.variable">
	  <DefaultArg genus-name="variable_digital" label="variable name" />
	</BlockConnector>
	<BlockConnector connector-type="boolean" connector-kind="socket" label="bc.value">
	  <DefaultArg genus-name="true" label="TRUE" />
	</BlockConnector>
      </BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="set"></LangSpecProperty>
			</LangSpecProperties>
    </BlockGenus>
    
    <BlockGenus name="set_digital_bitwiseand" kind="command" color="255 0 0" initlabel="bg.set_digital_bitwiseand">
      <description>
	<text>Assign a digital variable</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="socket" label="bc.variable">
	  <DefaultArg genus-name="variable_digital" label="variable name" />
	</BlockConnector>
	<BlockConnector connector-type="boolean" connector-kind="socket" label="bc.value">
	  <DefaultArg genus-name="digital-high" label="HIGH" />
	</BlockConnector>
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="set_digital_bitwiseor" kind="command" color="255 0 0" initlabel="bg.set_digital_bitwiseor">
      <description>
	<text>Assign a digital variable</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="socket" label="bc.variable">
	  <DefaultArg genus-name="variable_digital" label="variable name" />
	</BlockConnector>
	<BlockConnector connector-type="boolean" connector-kind="socket" label="bc.value">
	  <DefaultArg genus-name="digital-high" label="HIGH" />
	</BlockConnector>
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="set_string" kind="command" color="255 0 0" initlabel="bg.set_string">
      <description>
	<text>Assign a string variable</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="string" connector-kind="socket" label="bc.variable" >
	  <DefaultArg genus-name="variable_string" label="var"/>
	</BlockConnector>
	<BlockConnector connector-type="string" connector-kind="socket" label="bc.value" >
	  <DefaultArg genus-name="text" label="text"/>
	</BlockConnector>
      </BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="set"></LangSpecProperty>
			</LangSpecProperties>
    </BlockGenus>
    
    <!-- <BlockGenus name="init_boolean_list" kind="command" color="255 0 0" initlabel="bg.init_boolean_list">
      <description>
	<text>Assign a number variable</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="boolean-list" connector-kind="socket" label="bc.variable" >
	  <DefaultArg genus-name="variable_boolean_list" label="var"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.size" >
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
	<BlockConnector connector-type="boolean-list" connector-kind="socket" label="bc.value" ></BlockConnector>
      </BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="set"></LangSpecProperty>
			</LangSpecProperties>
    </BlockGenus>
    
    <BlockGenus name="init_number_list" kind="command" color="255 0 0" initlabel="bg.init_number_list">
      <description>
	<text>Assign a number variable</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number-list" connector-kind="socket" label="bc.variable" >
	  <DefaultArg genus-name="variable_number_list" label="var"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.size" >
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
	<BlockConnector connector-type="number-list" connector-kind="socket" label="bc.value" ></BlockConnector>
      </BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="set"></LangSpecProperty>
			</LangSpecProperties>
    </BlockGenus>
    
    <BlockGenus name="init_string_list" kind="command" color="255 0 0" initlabel="bg.init_string_list">
      <description>
	<text>Assign a number variable</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="string-list" connector-kind="socket" label="bc.variable" >
	  <DefaultArg genus-name="variable_string_list" label="var"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.size" >
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
	<BlockConnector connector-type="string-list" connector-kind="socket" label="bc.value" ></BlockConnector>
      </BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="set"></LangSpecProperty>
			</LangSpecProperties>
    </BlockGenus> -->
    
    <BlockGenus name="init_list" kind="command" color="255 127 0" initlabel="bg.init_list">
      <description>
	<text>Assign a number variable</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="poly-list" connector-kind="socket" label="bc.variable" >
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.size" >
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
	<BlockConnector connector-type="poly-list" connector-kind="socket" label="bc.values" ></BlockConnector>
      </BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="set"></LangSpecProperty>
			</LangSpecProperties>
    </BlockGenus>
    

<!-- Math -->

<!--   math-->
  	<BlockGenus name="min" kind="function" color="149 193 31" initlabel="bg.min">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror"/>
	<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom"/>
	<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom"/>
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="max" kind="function" color="149 193 31" initlabel="bg.max">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror"/>
	<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom"/>
	<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom"/>
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="abs" kind="function" color="149 193 31" initlabel="bg.abs">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug"/>
	<BlockConnector connector-type="number" connector-kind="socket"/>
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="sqrt" kind="function" color="149 193 31" initlabel="bg.sqrt">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug"/>
	<BlockConnector connector-type="number" connector-kind="socket"/>
      </BlockConnectors>
    </BlockGenus>
    
	<BlockGenus name="map_common" kind="data" color="149 193 31" initlabel="bg.map_common">
      <description>
	<text>map value from [0, 1023] to [0, 255]</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" />
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.value">
	  <DefaultArg genus-name="number" label="1" />
	</BlockConnector>
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="map" kind="data" color="149 193 31" initlabel="bg.map">
      <description>
	<text>Re-maps a number from one range to another.</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" />
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.value" />
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.from">
	  <DefaultArg genus-name="number" label="0" />
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket">
	  <DefaultArg genus-name="number" label="1023" />
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.to">
	  <DefaultArg genus-name="number" label="0" />
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket">
	  <DefaultArg genus-name="number" label="255" />
	</BlockConnector>
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="constrain" kind="data" color="149 193 31" initlabel="bg.constrain">
      <description>
	<text>Constrains a number to be within a range.</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" />
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.value" />
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.min">
	  <DefaultArg genus-name="number" label="0" />
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.max">
	  <DefaultArg genus-name="number" label="255" />
	</BlockConnector>
      </BlockConnectors>
    </BlockGenus>
 
 <!--   trigo-->
    <BlockGenus name="sin" kind="function" color="149 193 31" initlabel="bg.sin">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug"/>
	<BlockConnector connector-type="number" connector-kind="socket"/>
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="cos" kind="function" color="149 193 31" initlabel="bg.cos">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug"/>
	<BlockConnector connector-type="number" connector-kind="socket"/>
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="tan" kind="function" color="149 193 31" initlabel="bg.tan">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug"/>
	<BlockConnector connector-type="number" connector-kind="socket"/>
      </BlockConnectors>
    </BlockGenus>
    
<!--   random-->
	<BlockGenus name="random" kind="data" color="149 193 31" initlabel="bg.random">
      <description>
	<text>generate a random number less than the number</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" />
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.max">
	  <DefaultArg genus-name="number" label="1024" />
	</BlockConnector>
      </BlockConnectors>
    </BlockGenus>

<!--   bits & bytes-->


<!-- Serial -->

    <BlockGenus name="serial_print" kind="command" color="142 160 210" initlabel="bg.serial_print">
    	<description>
			<text>Send a message via Serial port + tab.</text>
      	</description>
      	<BlockConnectors>
			<BlockConnector connector-type="poly" connector-kind="socket" is-expandable="yes"></BlockConnector>
      	</BlockConnectors>
    </BlockGenus>
  
    <BlockGenus name="serial_print_1" kind="command" color="142 160 210" initlabel="bg.serial_print_1">
    	<description>
			<text>Send a message via Serial port + tab.</text>
      	</description>
      	<BlockConnectors>
			<BlockConnector connector-type="poly" connector-kind="socket" is-expandable="yes"></BlockConnector>
      	</BlockConnectors>
    </BlockGenus>
  
    <BlockGenus name="serial_print_2" kind="command" color="142 160 210" initlabel="bg.serial_print_2">
    	<description>
			<text>Send a message via Serial port + tab.</text>
      	</description>
      	<BlockConnectors>
			<BlockConnector connector-type="poly" connector-kind="socket" is-expandable="yes"></BlockConnector>
      	</BlockConnectors>
    </BlockGenus>
  
    <BlockGenus name="serial_print_3" kind="command" color="142 160 210" initlabel="bg.serial_print_3">
    	<description>
			<text>Send a message via Serial port + tab.</text>
      	</description>
      	<BlockConnectors>
			<BlockConnector connector-type="poly" connector-kind="socket" is-expandable="yes"></BlockConnector>
      	</BlockConnectors>
    </BlockGenus>
  
	<BlockGenus name="serial_println" kind="command" initlabel="bg.serial_println" color="142 160 210">
		<description>
			<text>
				Send a message via Serial port + carriage return.
			</text>
		</description>
		<BlockConnectors>
			<BlockConnector connector-kind="socket" connector-type="poly" is-expandable="yes"></BlockConnector>
		</BlockConnectors>
	</BlockGenus>

	<BlockGenus name="serial_println_1" kind="command" initlabel="bg.serial_println_1" color="142 160 210">
		<description>
			<text>
				Send a message via Serial port + carriage return.
			</text>
		</description>
		<BlockConnectors>
			<BlockConnector connector-kind="socket" connector-type="poly" is-expandable="yes"></BlockConnector>
		</BlockConnectors>
	</BlockGenus>

	<BlockGenus name="serial_println_2" kind="command" initlabel="bg.serial_println_2" color="142 160 210">
		<description>
			<text>
				Send a message via Serial port + carriage return.
			</text>
		</description>
		<BlockConnectors>
			<BlockConnector connector-kind="socket" connector-type="poly" is-expandable="yes"></BlockConnector>
		</BlockConnectors>
	</BlockGenus>

	<BlockGenus name="serial_println_3" kind="command" initlabel="bg.serial_println_3" color="142 160 210">
		<description>
			<text>
				Send a message via Serial port + carriage return.
			</text>
		</description>
		<BlockConnectors>
			<BlockConnector connector-kind="socket" connector-type="poly" is-expandable="yes"></BlockConnector>
		</BlockConnectors>
	</BlockGenus>

    <BlockGenus name="serial_read" kind="data" color="142 160 210" initlabel="bg.serial_read">
      <description>
	<text>Reads incoming serial data.</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug"/>
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="serial_read_1" kind="data" color="142 160 210" initlabel="bg.serial_read_1">
      <description>
	<text>Reads incoming serial data.</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug"/>
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="serial_read_2" kind="data" color="142 160 210" initlabel="bg.serial_read_2">
      <description>
	<text>Reads incoming serial data.</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug"/>
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="serial_read_3" kind="data" color="142 160 210" initlabel="bg.serial_read_3">
      <description>
	<text>Reads incoming serial data.</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug"/>
      </BlockConnectors>
    </BlockGenus>
    
	<BlockGenus name="text" kind="data" color="142 160 210"
		initlabel="bg.message" editable-label="yes">
		<description>
			<text>string message</text>
		</description>
		<BlockConnectors>
			<BlockConnector connector-kind="plug" connector-type="string" position-type="mirror"></BlockConnector>
		</BlockConnectors>
		<LangSpecProperties>
			<LangSpecProperty key="vm-cmd-name" value="eval-num"></LangSpecProperty>
			<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
		</LangSpecProperties>
	</BlockGenus> 

	<BlockGenus name="text_equal" kind="function" initlabel="=="
		color="149 193 31">
		<description>
			<text>
				Determines if two strings are equal (
				<arg n="1" />
				=
				<arg n="2" />
				).
			</text>
			<arg-description n="1" name="left value">
			</arg-description>
			<arg-description n="2" name="right value">
			</arg-description>
		</description>
		<BlockConnectors>
			<BlockConnector label="" connector-kind="plug"
				connector-type="boolean" position-type="mirror"></BlockConnector>
			<BlockConnector label="" connector-kind="socket"
				connector-type="string" position-type="bottom"></BlockConnector>
			<BlockConnector label="" connector-kind="socket"
				connector-type="string" position-type="bottom"></BlockConnector>
		</BlockConnectors>
		<LangSpecProperties>
			<LangSpecProperty key="vm-cmd-name" value="equals"></LangSpecProperty>
			<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
		</LangSpecProperties>
	</BlockGenus>  
		
		<BlockGenus name="text_append" kind="function" initlabel="+"
			color="149 193 31">
			<description>
				<text>
					Concatenates <arg n="3" /> to the end of <arg n="2" />.
				</text>
				<arg-description n="2" name="first">
					The text to which to
					append.
				</arg-description>
				<arg-description n="3" name="second">
					The text to append to.
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="string"
					position-type="mirror"></BlockConnector>
				<BlockConnector label="" connector-kind="socket"
					connector-type="string" position-type="bottom"></BlockConnector>
				<BlockConnector label="" connector-kind="socket"
					connector-type="string" position-type="bottom"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="sentence"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>


		<!-- Global variables -->

		<BlockGenus name="global-var" kind="variable" initlabel="bg.global-var" editable-label="yes" label-unique="yes" page-label-enabled="no" color="186 85 211">
			<description>
				<text>
					Reports the value of a boolean (<em>true</em> or <em>false</em>) global variable. 
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="poly"></BlockConnector>
			</BlockConnectors>
			<Stubs>
				<Stub stub-genus="getter">
					<LangSpecProperties>
						<LangSpecProperty key="vm-cmd-name" value="eval-global"></LangSpecProperty>
						<LangSpecProperty key="scope" value="global"></LangSpecProperty>
					</LangSpecProperties>
				</Stub>
				<Stub stub-genus="setter">
					<LangSpecProperties>
						<LangSpecProperty key="vm-cmd-name" value="eval-setglobal"></LangSpecProperty>
						<LangSpecProperty key="scope" value="global"></LangSpecProperty>
					</LangSpecProperties>
				</Stub>
			</Stubs>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="global-variable"></LangSpecProperty>
				<LangSpecProperty key="type" value="boolean"></LangSpecProperty>
				<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="global-var-boolean" kind="variable" initlabel="global boolean" editable-label="yes" label-unique="yes" page-label-enabled="no" color="186 85 211">
			<description>
				<text>
					Reports the value of a boolean (<em>true</em> or <em>false</em>) global variable. 
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="boolean"></BlockConnector>
			</BlockConnectors>
			<Stubs>
				<Stub stub-genus="getter">
					<LangSpecProperties>
						<LangSpecProperty key="vm-cmd-name" value="eval-global"></LangSpecProperty>
						<LangSpecProperty key="scope" value="global"></LangSpecProperty>
					</LangSpecProperties>
				</Stub>
			</Stubs>
			<LangSpecProperties>
				<LangSpecProperty key="scope" value="global"></LangSpecProperty>
				<LangSpecProperty key="type" value="boolean"></LangSpecProperty>
				<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="global-var-boolean-list" kind="variable" initlabel="global boolean list" editable-label="yes" label-unique="yes" page-label-enabled="no" color="186 85 211">
			<description>
				<text>
					Reports the value of a boolean list global variable.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="boolean-list" ></BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="number" label="size"></BlockConnector>
			</BlockConnectors>
			<Stubs>
				<Stub stub-genus="getter">
					<LangSpecProperties>
						<LangSpecProperty key="vm-cmd-name" value="eval-global"></LangSpecProperty>
						<LangSpecProperty key="scope" value="global"></LangSpecProperty>
					</LangSpecProperties>	
				</Stub>
			</Stubs>
			<LangSpecProperties>
			 	<LangSpecProperty key="scope" value="global"></LangSpecProperty>
			 	<LangSpecProperty key="type" value="boolean-list"></LangSpecProperty>
				<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
				<LangSpecProperty key="is-breed-set-by-canvas" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>

		<BlockGenus name="global-var-number" kind="variable" initlabel="global number" editable-label="yes" label-unique="yes" page-label-enabled="no" color="186 85 211">
			<description>
				<text>
					Reports the value of a number global variable. 
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="number"></BlockConnector>
			</BlockConnectors>
			<Stubs>
				<Stub stub-genus="getter">
					<LangSpecProperties>
						<LangSpecProperty key="vm-cmd-name" value="eval-global"></LangSpecProperty>
						<LangSpecProperty key="scope" value="global"></LangSpecProperty>
					</LangSpecProperties>
				</Stub>
			</Stubs>
			<LangSpecProperties>
				<LangSpecProperty key="scope" value="global"></LangSpecProperty>
				<LangSpecProperty key="type" value="number"></LangSpecProperty>
				<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="global-var-number-list" kind="variable" initlabel="global number list" editable-label="yes" label-unique="yes" page-label-enabled="no" color="186 85 211">
			<description>
				<text>
					Reports the value of a number list global variable.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="number-list" ></BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="number" label="size"></BlockConnector>
			</BlockConnectors>
			<Stubs>
				<Stub stub-genus="getter">
					<LangSpecProperties>
						<LangSpecProperty key="vm-cmd-name" value="eval-global"></LangSpecProperty>
						<LangSpecProperty key="scope" value="global"></LangSpecProperty>
					</LangSpecProperties>	
				</Stub>
			</Stubs>
			<LangSpecProperties>
			 	<LangSpecProperty key="scope" value="global"></LangSpecProperty>
			 	<LangSpecProperty key="type" value="number-list"></LangSpecProperty>
				<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
				<LangSpecProperty key="is-breed-set-by-canvas" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
	
		<BlockGenus name="global-var-real" kind="variable" initlabel="global real" editable-label="yes" label-unique="yes" page-label-enabled="no" color="186 85 211">
			<description>
				<text>
					Reports the value of a real global variable. 
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="number"></BlockConnector>
			</BlockConnectors>
			<Stubs>
				<Stub stub-genus="getter">
					<LangSpecProperties>
						<LangSpecProperty key="vm-cmd-name" value="eval-global"></LangSpecProperty>
						<LangSpecProperty key="scope" value="global"></LangSpecProperty>
					</LangSpecProperties>
				</Stub>
			</Stubs>
			<LangSpecProperties>
				<LangSpecProperty key="scope" value="global"></LangSpecProperty>
				<LangSpecProperty key="type" value="number"></LangSpecProperty>
				<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="global-var-string" kind="variable" initlabel="global string" editable-label="yes" label-unique="yes" page-label-enabled="no" color="186 85 211">
			<description>
				<text>
					Reports the value of a String global variable. 
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="string"></BlockConnector>
			</BlockConnectors>
			<Stubs>
				<Stub stub-genus="getter">
					<LangSpecProperties>
						<LangSpecProperty key="vm-cmd-name" value="eval-global"></LangSpecProperty>
						<LangSpecProperty key="scope" value="global"></LangSpecProperty>
					</LangSpecProperties>
				</Stub>
			</Stubs>
			<LangSpecProperties>
				<LangSpecProperty key="scope" value="global"></LangSpecProperty>
				<LangSpecProperty key="type" value="string"></LangSpecProperty>
				<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="global-var-string-list" kind="variable" initlabel="global string list" editable-label="yes" label-unique="yes" page-label-enabled="no" color="186 85 211">
			<description>
				<text>
					Reports the value of a string list global variable.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="string-list" ></BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="number" label="size"></BlockConnector>
			</BlockConnectors>
			<Stubs>
				<Stub stub-genus="getter">
					<LangSpecProperties>
						<LangSpecProperty key="vm-cmd-name" value="eval-global"></LangSpecProperty>
						<LangSpecProperty key="scope" value="global"></LangSpecProperty>
					</LangSpecProperties>	
				</Stub>
				<!-- <Stub stub-genus="setter">
					<LangSpecProperties>
						<LangSpecProperty key="vm-cmd-name" value="eval-setglobal"></LangSpecProperty>
						<LangSpecProperty key="scope" value="global"></LangSpecProperty>
					</LangSpecProperties>	
				</Stub> -->
			</Stubs>
			<LangSpecProperties>
			 	<LangSpecProperty key="scope" value="global"></LangSpecProperty>
			 	<LangSpecProperty key="type" value="string-list"></LangSpecProperty>
				<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
				<LangSpecProperty key="is-breed-set-by-canvas" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
       
		<!-- Procedure and parameters -->
		
		<BlockGenus name="procedure" kind="procedure" initlabel="procedure" editable-label="yes" label-unique="yes" page-label-enabled="no" is-starter="yes" color="177 10 255">
			<description>
				<text>
					Defines a section of blocks as a procedure that can be called from other sections of blocks.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="poly" is-expandable="yes"></BlockConnector>
			</BlockConnectors>
			<Stubs>
				<Stub stub-genus="caller">
					<LangSpecProperties>
						<LangSpecProperty key="vm-cmd-name" value="eval-procedure"></LangSpecProperty>
						<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
						<LangSpecProperty key="is-breed-set-by-canvas" value="yes"></LangSpecProperty>
						<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
					</LangSpecProperties>
				</Stub>
			</Stubs>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-procedure"></LangSpecProperty>
				<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
				<LangSpecProperty key="is-breed-set-by-canvas" value="yes"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed-procedure"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="proc-param-number" kind="param" initlabel="bg.proc-param-number" editable-label="yes" label-unique="yes" is-starter="yes" is-terminator="yes" color="177 10 255">
			<description>
				<text>
					Adds a number parameter to a procedure.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number"></BlockConnector>
			</BlockConnectors>
			<Stubs>
				<Stub stub-genus="getter">
					<LangSpecProperties>
						<LangSpecProperty key="vm-cmd-name" value="eval-local"></LangSpecProperty>
						<LangSpecProperty key="scope" value="local"></LangSpecProperty>
					</LangSpecProperties>	
				</Stub>
			</Stubs>
			<LangSpecProperties>
				<LangSpecProperty key="type" value="number"></LangSpecProperty>
			</LangSpecProperties>	
		</BlockGenus>
		
		<BlockGenus name="proc-param-boolean" kind="param" initlabel="bg.proc-param-boolean" editable-label="yes" label-unique="yes" is-starter="yes" is-terminator="yes" color="177 10 255">
			<description>
				<text>
					Adds a boolean parameter to a procedure.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean"></BlockConnector>
			</BlockConnectors>
			<Stubs>
				<Stub stub-genus="getter">
					<LangSpecProperties>
						<LangSpecProperty key="vm-cmd-name" value="eval-local"></LangSpecProperty>
						<LangSpecProperty key="scope" value="local"></LangSpecProperty>
						<LangSpecProperty key="stack-type" value="breed-procedure"></LangSpecProperty>
					</LangSpecProperties>	
				</Stub>
			</Stubs>
			<LangSpecProperties>
				<LangSpecProperty key="type" value="boolean"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed-procedure"></LangSpecProperty>
			</LangSpecProperties>	
		</BlockGenus>
		
		<BlockGenus name="proc-param-string" kind="param" initlabel="bg.proc-param-string" editable-label="yes" label-unique="yes" is-starter="yes" is-terminator="yes" color="177 10 255">
			<description>
				<text>
					Adds a text parameter to a procedure.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="string"></BlockConnector>
			</BlockConnectors>
			<Stubs>
				<Stub stub-genus="getter">
					<LangSpecProperties>
						<LangSpecProperty key="vm-cmd-name" value="eval-local"></LangSpecProperty>
						<LangSpecProperty key="scope" value="local"></LangSpecProperty>
						<LangSpecProperty key="stack-type" value="breed-procedure"></LangSpecProperty>
					</LangSpecProperties>	
				</Stub>
			</Stubs>
			<LangSpecProperties>
				<LangSpecProperty key="type" value="string"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed-procedure"></LangSpecProperty>
			</LangSpecProperties>	
		</BlockGenus>
		
		<BlockGenus name="proc-param-list" kind="param" initlabel="bg.proc-param-list" editable-label="yes" label-unique="yes" is-starter="yes" is-terminator="yes" color="177 10 255">
			<description>
				<text>
					Adds a list parameter to a procedure.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="poly-list"></BlockConnector>
			</BlockConnectors>
			<Stubs>
				<Stub stub-genus="getter">
					<LangSpecProperties>
						<LangSpecProperty key="vm-cmd-name" value="eval-local"></LangSpecProperty>
						<LangSpecProperty key="scope" value="local"></LangSpecProperty>
						<LangSpecProperty key="stack-type" value="breed-procedure"></LangSpecProperty>
					</LangSpecProperties>	
				</Stub>
			</Stubs>
			<LangSpecProperties>
				<LangSpecProperty key="type" value="list"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed-procedure"></LangSpecProperty>
			</LangSpecProperties>	
		</BlockGenus>
		
		<BlockGenus name="return" kind="command" initlabel="bg.return" color="127 0 255" is-terminator="yes" is-starter="no">
			<description>
				<text>
					Return the result of a procedure.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="poly" ></BlockConnector>
			</BlockConnectors>
<!-- 			<Stubs>
				<Stub stub-genus="getter">
					<LangSpecProperties>
						<LangSpecProperty key="vm-cmd-name" value="eval-local"></LangSpecProperty>
						<LangSpecProperty key="scope" value="local"></LangSpecProperty>
					</LangSpecProperties>	
				</Stub>
			</Stubs>
 -->			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="cmd-output"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		
<!-- Utility -->
    <BlockGenus name="lcd" kind="command" color="135 173 52" initlabel="bg.lcd">
  	<BlockConnectors>
    <BlockConnector connector-type="string" connector-kind="socket" label="bc.message">
      	<DefaultArg genus-name="text" label="Hello word!"/>
    </BlockConnector>
	</BlockConnectors>
	<LangSpecProperties>
		<LangSpecProperty key="columns" value="16"></LangSpecProperty>
		<LangSpecProperty key="rows" value="2"></LangSpecProperty>
		<LangSpecProperty key="RS" value="11"></LangSpecProperty>
		<LangSpecProperty key="RW" value="10"></LangSpecProperty>
		<LangSpecProperty key="E" value="9"></LangSpecProperty>
		<LangSpecProperty key="D0" value=""></LangSpecProperty>
		<LangSpecProperty key="D1" value=""></LangSpecProperty>
		<LangSpecProperty key="D2" value=""></LangSpecProperty>
		<LangSpecProperty key="D3" value=""></LangSpecProperty>
		<LangSpecProperty key="D4" value="5"></LangSpecProperty>
		<LangSpecProperty key="D5" value="4"></LangSpecProperty>
		<LangSpecProperty key="D6" value="3"></LangSpecProperty>
		<LangSpecProperty key="D7" value="2"></LangSpecProperty>
	</LangSpecProperties>
	</BlockGenus>
	
		<BlockGenus name="cursor" kind="command" initlabel="bg.setter" color="0 0 0" >
			<description>
				<text>
					Sets the value of the variable.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="number" position-type="single" is-expandable="no" label="col">
      				<DefaultArg genus-name="number" label="0"/></BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="number" position-type="single" is-expandable="no" label="row">
      				<DefaultArg genus-name="number" label="0"/></BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		
		<BlockGenus name="lcdinit" kind="variable" initlabel="lcdinit" editable-label="no" label-unique="yes" page-label-enabled="no" color="135 173 52">
			<description>
				<text>
					Init the LCD.
				</text>
			</description>
			<BlockConnectors>
				<!-- <BlockConnector connector-kind="socket" connector-type="string" label="display"> -->
				<BlockConnector connector-kind="socket" connector-type="poly" label="display">
      				<DefaultArg genus-name="text" label="Hello World!"/></BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="number-list" >
      				<DefaultArg genus-name="lcdlist" label="init"/></BlockConnector>
			</BlockConnectors>
			<Stubs>
				<Stub stub-genus="setter">
					<LangSpecProperties>
						<LangSpecProperty key="vm-cmd-name" value="eval-global"></LangSpecProperty>
						<LangSpecProperty key="scope" value="global"></LangSpecProperty>
					</LangSpecProperties>	
				</Stub>
				<Stub stub-genus="cursor">
					<LangSpecProperties>
						<LangSpecProperty key="vm-cmd-name" value="eval-global"></LangSpecProperty>
						<LangSpecProperty key="scope" value="global"></LangSpecProperty>
					</LangSpecProperties>	
				</Stub>
			</Stubs>
			<LangSpecProperties>
			 	<LangSpecProperty key="scope" value="global"></LangSpecProperty>
			 	<LangSpecProperty key="type" value="number-list"></LangSpecProperty>
				<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
				<LangSpecProperty key="is-breed-set-by-canvas" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>

		<BlockGenus name="lcdlist" kind="function" initlabel="bg.lcdlist" color="255 127 0">
			<description>
				<text>
					Init list for lcd.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug" connector-type="number-list" is-expandable="no" expand-group="no"></BlockConnector>
				<BlockConnector label="cols nb" connector-kind="socket" connector-type="number" is-expandable="no" position-type="single" >
      				<DefaultArg genus-name="number" label="16"/></BlockConnector>
				<BlockConnector label="rows nb" connector-kind="socket" connector-type="number" is-expandable="no" position-type="single" >
      				<DefaultArg genus-name="number" label="2"/></BlockConnector>
				<BlockConnector label="GND #" connector-kind="socket" connector-type="number" is-expandable="no" position-type="single" ></BlockConnector>
				<BlockConnector label="Vcc #" connector-kind="socket" connector-type="number" is-expandable="no" position-type="single" >
      				<DefaultArg genus-name="number" label="13"/></BlockConnector>
				<BlockConnector label="RS #" connector-kind="socket" connector-type="number" is-expandable="no" position-type="single" >
      				<DefaultArg genus-name="number" label="11"/></BlockConnector>
				<BlockConnector label="RW #" connector-kind="socket" connector-type="number" is-expandable="no" position-type="single" >
      				<DefaultArg genus-name="number" label="10"/></BlockConnector>
				<BlockConnector label="E #" connector-kind="socket" connector-type="number" is-expandable="no" position-type="single" >
      				<DefaultArg genus-name="number" label="9"/></BlockConnector>
				<BlockConnector label="D7 #" connector-kind="socket" connector-type="number" is-expandable="no" position-type="single" >
      				<DefaultArg genus-name="number" label="2"/></BlockConnector>
				<BlockConnector label="D6 #" connector-kind="socket" connector-type="number" is-expandable="no" position-type="single" >
      				<DefaultArg genus-name="number" label="3"/></BlockConnector>
				<BlockConnector label="D5 #" connector-kind="socket" connector-type="number" is-expandable="no" position-type="single" >
      				<DefaultArg genus-name="number" label="4"/></BlockConnector>
				<BlockConnector label=": #" connector-kind="socket" connector-type="number" is-expandable="yes" position-type="single" expand-group="yes">
      				<DefaultArg genus-name="number" label="5"/></BlockConnector>
			</BlockConnectors>
		</BlockGenus>
			
    <BlockGenus name="ultrasonic" kind="data" color="77 191 169" initlabel="bg.ultrasonic">
      <description>
	<text>Ultrasonic distance sensor</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" label="cm" />
	<BlockConnector connector-type="number" connector-kind="socket" label="trigger #">
	  <DefaultArg genus-name="pin_00" label="1" />
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="echo #">
	  <DefaultArg genus-name="pin_00" label="2" />
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image block-location="west" >
	  <FileLocation>com/ardublock/block/USt20.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    
    <BlockGenus name="servo" kind="command" color="142 160 210" initlabel="bg.servo">
      <description>
	<text>set a pin to pwm</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="pin_pwm3" label="3" />
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.angle">
	  <DefaultArg genus-name="number" label="90" />
	</BlockConnector>
      </BlockConnectors>
    </BlockGenus>
    
		<BlockGenus name="step" kind="command" initlabel="bg.setter" color="0 0 0" >
			<description>
				<text>
					Sets the value of the variable.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="number" position-type="single" is-expandable="no" label="Nb">
      				<DefaultArg genus-name="number" label="100"/></BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="number" position-type="single" is-expandable="no" label="[rpm]">
      				<DefaultArg genus-name="number" label="50"/></BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		
		<BlockGenus name="stepper" kind="variable" initlabel="bg.stepper" editable-label="yes" label-unique="yes" page-label-enabled="no" color="135 173 52">
			<description>
				<text>
					Init the spetter motor.
				</text>
			</description>
			<BlockConnectors>
				<!-- <BlockConnector connector-kind="socket" connector-type="string" label="display"> -->
				<BlockConnector connector-kind="socket" connector-type="number" label="steps/rev">
      				<DefaultArg genus-name="number" label="48"/></BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="number" label="M1#">
      				<DefaultArg genus-name="number" label="4"/></BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="number" label="E1#">
      				<DefaultArg genus-name="number" label="5"/></BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="number" label="E2#">
      				<DefaultArg genus-name="number" label="6"/></BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="number" label="M2#">
      				<DefaultArg genus-name="number" label="7"/></BlockConnector>
			</BlockConnectors>
			<Stubs>
				<Stub stub-genus="step">
					<LangSpecProperties>
						<LangSpecProperty key="vm-cmd-name" value="eval-global"></LangSpecProperty>
						<LangSpecProperty key="scope" value="global"></LangSpecProperty>
					</LangSpecProperties>	
				</Stub>
			</Stubs>
			<LangSpecProperties>
			 	<LangSpecProperty key="scope" value="global"></LangSpecProperty>
			 	<LangSpecProperty key="type" value="number-list"></LangSpecProperty>
				<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
				<LangSpecProperty key="is-breed-set-by-canvas" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>

    <BlockGenus name="touch_sensitive" kind="data" color="77 191 169" initlabel="bg.touch_sensitive">
      <description>
	<text>Button touch</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="plug" label="cm" />
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="pin_00" label="0" />
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.sensitivity">
	  <DefaultArg genus-name="number" label="1" />
	</BlockConnector>
	  </BlockConnectors>
    </BlockGenus>
    
    
    <!--   I2C-->

    <BlockGenus name="wire_read" kind="data" color="142 160 210" initlabel="bg.wire_read">
      <description>
	<text>read data from i2c</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug"/>
	<BlockConnector connector-type="number" connector-kind="socket" label="device address">
	  <DefaultArg genus-name="number" label="0"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="register address">
	  <DefaultArg genus-name="number" label="0"/>
	</BlockConnector>
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="wire_write" kind="command" color="142 160 210" initlabel="bg.wire_write">
      <description>
	<text>write data via I2C</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="device address">
	  <DefaultArg genus-name="number" label="0"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="register address">
	  <DefaultArg genus-name="number" label="0"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.value">
	  <DefaultArg genus-name="number" label="0"/>
	</BlockConnector>
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="wire_isread" kind="data" color="142 160 210" initlabel="bg.wire_isread">
      <description>
	<text>is last read from I2C success?</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror"/>
      </BlockConnectors>
    </BlockGenus>
    
    <!-- TinkerKit! -->
    <BlockGenus name="Tinker_LED" kind="command" color="255 255 255" initlabel="bg.Tinker_LED">
      <description>
	<text>TinkerKit LED</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="Tinker_O1" label="O1"/>
	</BlockConnector>
	<BlockConnector connector-type="boolean" connector-kind="socket" label="bc.status">
	  <DefaultArg genus-name="digital-on" label="ON"/>
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/arduino/Tinker_LED.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    
    <BlockGenus name="Tinker_LED_pwm" kind="command" color="255 255 255" initlabel="bg.Tinker_LED_pwm">
      <description>
	<text>TinkerKit LED</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="Tinker_O1" label="O1"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.level">
	  <DefaultArg genus-name="number" label="255"/>
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/arduino/Tinker_LED.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    
    <BlockGenus name="Tinker_Mosfet" kind="command" color="255 255 255" initlabel="bg.Tinker_Mosfet">
      <description>
	<text>TinkerKit Mosfet</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="Tinker_O1" label="O1"/>
	</BlockConnector>
	<BlockConnector connector-type="boolean" connector-kind="socket" label="bc.status">
	  <DefaultArg genus-name="digital-high" label="HIGH"/>
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/arduino/Tinker_Mosfet.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    
    <BlockGenus name="Tinker_Mosfet_pwm" kind="command" color="255 255 255" initlabel="bg.Tinker_Mosfet_pwm">
      <description>
	<text>TinkerKit Mosfet</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="Tinker_O1" label="O1"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.level">
	  <DefaultArg genus-name="number" label="255"/>
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/arduino/Tinker_Mosfet.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    
    <BlockGenus name="Tinker_Relay" kind="command" color="255 255 255" initlabel="bg.Tinker_Relay">
      <description>
	<text>TinkerKit Relay</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="Tinker_O1" label="O1"/>
	</BlockConnector>
	<BlockConnector connector-type="boolean" connector-kind="socket" label="bc.status">
	  <DefaultArg genus-name="digital-high" label="HIGH"/>
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/arduino/Tinker_Relay.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    
    <BlockGenus name="Tinker_Servo" kind="command" color="255 255 255" initlabel="bg.Tinker_Servo">
      <description>
	<text>TinkerKit Servo</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="Tinker_O1" label="O1"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.angle">
	  <DefaultArg genus-name="number" label="90"/>
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/arduino/Tinker_Servo.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    
    <BlockGenus name="Tinker_Button" kind="data" color="255 255 255" initlabel="bg.Tinker_Button">
      <description>
	<text>TinkerKit Button</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="plug"/>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="Tinker_I1" label="I1"/>
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/arduino/Tinker_Button.png</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    
    
    <BlockGenus name="Tinker_Accmeter" kind="data" color="255 255 255" initlabel="bg.Tinker_Accmeter">
      <description>
	<text>TinkerKit Accelerometer</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug"/>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="Tinker_I1" label="I1"/>
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/arduino/Tinker_Accmeter.png</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    
    <BlockGenus name="Tinker_Hall" kind="data" color="255 255 255" initlabel="bg.Tinker_Hall">
      <description>
	<text>TinkerKit Hall Sensor</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug"/>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="Tinker_I1" label="I1"/>
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/arduino/Tinker_Hall.png</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    
    <BlockGenus name="Tinker_LDR" kind="data" color="255 255 255" initlabel="bg.Tinker_LDR">
      <description>
	<text>TinkerKit LDR</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug"/>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="Tinker_I1" label="I1"/>
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/arduino/Tinker_LDR.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    
    <BlockGenus name="Tinker_LinearPotentiometer" kind="data" color="255 255 255" initlabel="bg.Tinker_LinearPotentiometer">
      <description>
	<text>TinkerKit Accelerometer</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug"/>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="Tinker_I1" label="I1"/>
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/arduino/Tinker_LinearPotentiometer.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    
    <BlockGenus name="Tinker_RotaryPotentiometer" kind="data" color="255 255 255" initlabel="bg.Tinker_RotaryPotentiometer">
      <description>
	<text>TinkerKit RotaryPotentiometer</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug"/>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="Tinker_I1" label="I1"/>
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/arduino/Tinker_RotaryPotentiometer.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    
    <BlockGenus name="Tinker_Thermistor" kind="data" color="255 255 255" initlabel="bg.Tinker_Thermistor">
      <description>
	<text>TinkerKit Thermistor</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug"/>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="Tinker_I1" label="I1"/>
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/arduino/Tinker_Thermistor.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    
    <BlockGenus name="Tinker_Touch" kind="data" color="255 255 255" initlabel="bg.Tinker_Touch">
      <description>
	<text>TinkerKit Touch Sensor</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="plug"/>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="Tinker_I1" label="I1"/>
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/arduino/Tinker_Touch.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    
    <BlockGenus name="Tinker_Servo" kind="command" color="255 255 255" initlabel="bg.Tinker_Servo">
      <description>
	<text>TinkerKit Servo</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="Tinker_I1" label="I1"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.angle">
	  <DefaultArg genus-name="number" label="90"/>
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/arduino/Tinker_Servo.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    
    
    <BlockGenus name="Tinker_Tilt" kind="data" color="255 255 255" initlabel="bg.Tinker_Tilt">
      <description>
	<text>TinkerKit Tilt</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="plug"/>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="Tinker_I1" label="I1"/>
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/arduino/Tinker_Tilt.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    
    <BlockGenus name="Tinker_I0" kind="data" color="255 255 255" initlabel="bg.Tinker_I0" editable-label="no">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror"/>
      </BlockConnectors>
    </BlockGenus>
    <BlockGenus name="Tinker_I1" kind="data" color="255 255 255" initlabel="bg.Tinker_I1" editable-label="no">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror"/>
      </BlockConnectors>
    </BlockGenus>
    <BlockGenus name="Tinker_I2" kind="data" color="255 255 255" initlabel="bg.Tinker_I2" editable-label="no">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror"/>
      </BlockConnectors>
    </BlockGenus>
    <BlockGenus name="Tinker_I3" kind="data" color="255 255 255" initlabel="bg.Tinker_I3" editable-label="no">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror"/>
      </BlockConnectors>
    </BlockGenus>
    <BlockGenus name="Tinker_I4" kind="data" color="255 255 255" initlabel="bg.Tinker_I4" editable-label="no">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror"/>
      </BlockConnectors>
    </BlockGenus>
    <BlockGenus name="Tinker_I5" kind="data" color="255 255 255" initlabel="bg.Tinker_I5" editable-label="no">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror"/>
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="Tinker_O0" kind="data" color="214 169 54" initlabel="bg.Tinker_O0" editable-label="no">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror"/>
      </BlockConnectors>
    </BlockGenus>
    <BlockGenus name="Tinker_O1" kind="data" color="214 169 54" initlabel="bg.Tinker_O1" editable-label="no">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror"/>
      </BlockConnectors>
    </BlockGenus>
    <BlockGenus name="Tinker_O2" kind="data" color="214 169 54" initlabel="bg.Tinker_O2" editable-label="no">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror"/>
      </BlockConnectors>
    </BlockGenus>
    <BlockGenus name="Tinker_O3" kind="data" color="214 169 54" initlabel="bg.Tinker_O3" editable-label="no">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror"/>
      </BlockConnectors>
    </BlockGenus>
    <BlockGenus name="Tinker_O4" kind="data" color="214 169 54" initlabel="bg.Tinker_O4" editable-label="no">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror"/>
      </BlockConnectors>
    </BlockGenus>
    <BlockGenus name="Tinker_O5" kind="data" color="214 169 54" initlabel="bg.Tinker_O5" editable-label="no">
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror"/>
      </BlockConnectors>
    </BlockGenus>
    
    <!-- Xinchejian -->
    
    <BlockGenus name="xcj_motor_forward" kind="command" color="0 255 0" initlabel="bg.xcj_motor_forward">
      <description>
	<text>forward</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="M#">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="speed">
	  <DefaultArg genus-name="number" label="255"/>
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/motor.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    
    <BlockGenus name="xcj_motor_backward" kind="command" color="0 255 0" initlabel="bg.xcj_motor_backward">
      <description>
	<text>Moving the car backward</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="M#">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="speed">
	  <DefaultArg genus-name="number" label="255"/>
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/motor.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    
    <BlockGenus name="xcj_ms_digital_write" kind="command" color="0 255 0" initlabel="bg.xcj_ms_digital_write">
      <description>
	<text>Write ditial singal to Socket</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="S#">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
	<BlockConnector connector-type="boolean" connector-kind="socket" label="bc.status">
	  <DefaultArg genus-name="digital-high" label="HIGH"/>
	</BlockConnector>
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="xcj_ms_digital_read" kind="data" color="0 255 0" initlabel="bg.xcj_ms_digital_read">
      <description>
	<text>Read digital status from socket</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="plug"/>
	<BlockConnector connector-type="number" connector-kind="socket" label="S#">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
      </BlockConnectors>
    </BlockGenus>
    
    <!-- DFRobot -->
    
    
    <BlockGenus name="df_digital_viberation_sensor" kind="data" color="255 102 0" initlabel="bg.df_digital_viberation_sensor">
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="plug"/>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/dfrobot/dfr0027.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    
    
    <BlockGenus name="df_digital_infrared_motion_sensor" kind="data" color="255 102 0" initlabel="bg.df_digital_infrared_motion_sensor">
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="plug"/>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/dfrobot/sen0018.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>

    <BlockGenus name="df_digital_ir_receiver_module" kind="data" color="255 102 0" initlabel="bg.df_digital_ir_receiver_module">
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="plug"/>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/dfrobot/dfr0094.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>

    <BlockGenus name="df_adjustable_infrared_sensor_switch" kind="data" color="255 102 0" initlabel="bg.df_adjustable_infrared_sensor_switch">
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="plug"/>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/dfrobot/sen0019.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>

    <BlockGenus name="df_line_tracking_sensor" kind="data" color="255 102 0" initlabel="bg.df_line_tracking_sensor">
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="plug"/>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/dfrobot/sen0017.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>

    <BlockGenus name="df_digital_push_button" kind="data" color="255 102 0" initlabel="bg.df_digital_push_button">
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="plug"/>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/dfrobot/dfr0029.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>

    <BlockGenus name="df_joystick_module_button" kind="data" color="255 102 0" initlabel="bg.df_joystick_module_button">
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="plug"/>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/dfrobot/dfr0061.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>

    <BlockGenus name="df_capacitive_touch_sensor" kind="data" color="255 102 0" initlabel="bg.df_capacitive_touch_sensor">
      <BlockConnectors>
	<BlockConnector connector-type="boolean" connector-kind="plug"/>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/dfrobot/dfr0030.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>



    <BlockGenus name="df_pizeo_disk_vibration_sensor" kind="data" color="255 102 0" initlabel="bg.df_pizeo_disk_vibration_sensor">
      <description>
	<text>Vibration Sensor buffers a piezoelectric transducer that responds to strain changes by generating a measurable output voltage change which is proportional to the strength of vibration.</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="plug"/>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/dfrobot/dfr0052.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    <BlockGenus name="df_analog_ambient_light_sensor" kind="data" color="255 102 0" initlabel="bg.df_analog_ambient_light_sensor">
      <description>
	<text>The ambient light sensor detects light density.  </text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="plug"/>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/dfrobot/dfr0026.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    <BlockGenus name="df_analog_grayscale_sensor" kind="data" color="255 102 0" initlabel="bg.df_analog_grayscale_sensor">
      <description>
	<text>Analog Grayscale Sensor detect the grayscale.</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="plug"/>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/dfrobot/dfr0022.png</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    <BlockGenus name="df_flame_sensor" kind="data" color="255 102 0" initlabel="bg.df_flame_sensor">
      <description>
	<text>Read analog value from pin</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="plug"/>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/dfrobot/dfr0076.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    <BlockGenus name="df_temperature_sensor" kind="data" color="255 102 0" initlabel="bg.df_temperature_sensor">
      <description>
	<text>Read analog value from pin</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="plug"/>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/dfrobot/dfr0023.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    <BlockGenus name="df_joystick_module_x" kind="data" color="255 102 0" initlabel="bg.df_joystick_module_x">
      <description>
	<text>Read analog value from pin</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="plug"/>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/dfrobot/dfr0061.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    <BlockGenus name="df_joystick_module_y" kind="data" color="255 102 0" initlabel="bg.df_joystick_module_y">
      <description>
	<text>Read analog value from pin</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="plug"/>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/dfrobot/dfr0061.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    <BlockGenus name="df_mma7260_x" kind="data" color="255 102 0" initlabel="bg.df_mma7260_x">
      <description>
	<text>Read analog value from pin</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="plug"/>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/dfrobot/dfr0068.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    <BlockGenus name="df_mma7260_y" kind="data" color="255 102 0" initlabel="bg.df_mma7260_y">
      <description>
	<text>Read analog value from pin</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="plug"/>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/dfrobot/dfr0068.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    <BlockGenus name="df_mma7260_z" kind="data" color="255 102 0" initlabel="bg.df_mma7260_z">
      <description>
	<text>Read analog value from pin</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="plug"/>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/dfrobot/dfr0068.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    <BlockGenus name="df_analog_rotation_sensor_v1" kind="data" color="255 102 0" initlabel="bg.df_analog_rotation_sensor_v1">
      <description>
	<text>Read analog value from pin</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="plug"/>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/dfrobot/dfr0054.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    <BlockGenus name="df_analog_rotation_sensor_v2" kind="data" color="255 102 0" initlabel="bg.df_analog_rotation_sensor_v2">
      <description>
	<text>Read analog value from pin</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="plug"/>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/dfrobot/dfr0058.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    <BlockGenus name="df_analog_sound_sensor" kind="data" color="255 102 0" initlabel="bg.df_analog_sound_sensor">
      <description>
	<text>Read analog value from pin</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="plug"/>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/dfrobot/dfr0034.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    <BlockGenus name="df_analog_gas_sensor" kind="data" color="255 102 0" initlabel="bg.df_analog_gas_sensor">
      <description>
	<text>Read analog value from pin</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="plug"/>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/dfrobot/dfr0049.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    
    <BlockGenus name="df_servo" kind="command" color="255 102 0" initlabel="bg.df_servo">
      <description>
	<text>set a pin to pwm</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.angle">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/dfrobot/ser0017.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>

    <BlockGenus name="df_360_degree_rotation_motor" kind="command" color="255 102 0" initlabel="bg.df_360_degree_rotation_motor">
      <description>
	<text>set a pin to pwm</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.angle">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/dfrobot/ser0017.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    
    <BlockGenus name="df_led" kind="command" color="255 102 0" initlabel="bg.df_led">
      <description>
	<text>DFRobot LED Module</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
	<BlockConnector connector-type="boolean" connector-kind="socket" label="bc.status">
	  <DefaultArg genus-name="digital-on" label="ON"/>
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/dfrobot/dfr0021.png</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    
    <BlockGenus name="df_led_pwm" kind="command" color="255 102 0" initlabel="bg.df_led_pwm">
      <description>
	<text>DFRobot LED Module</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.level">
	  <DefaultArg genus-name="number" label="255"/>
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/dfrobot/dfr0021.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    
    <BlockGenus name="df_piranha_led" kind="command" color="255 102 0" initlabel="bg.df_piranha_led">
      <description>
	<text>DFRobot piranha LED Module</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
	<BlockConnector connector-type="boolean" connector-kind="socket" label="bc.status">
	  <DefaultArg genus-name="digital-on" label="ON"/>
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/dfrobot/dfr0031.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    
    <BlockGenus name="df_piranha_led_pwm" kind="command" color="255 102 0" initlabel="bg.df_piranha_led_pwm">
      <description>
	<text>DFRobot pianha LED Module with brightnes level</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.level">
	  <DefaultArg genus-name="number" label="255"/>
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/dfrobot/dfr0031.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    
    <BlockGenus name="df_relay" kind="command" color="255 102 0" initlabel="bg.df_relay">
      <description>
	<text>Dfrobot Relay Module</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
	<BlockConnector connector-type="boolean" connector-kind="socket" label="bc.status">
	  <DefaultArg genus-name="digital-high" label="HIGH"/>
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/dfrobot/dfr0017.png</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    
    <BlockGenus name="df_buzzer" kind="command" color="255 102 0" initlabel="bg.df_buzzer">
      <description>
	<text>DFRobot buzzer Module</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
	<BlockConnector connector-type="boolean" connector-kind="socket" label="bc.status">
	  <DefaultArg genus-name="digital-on" label="ON"/>
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/dfrobot/dfr0032.png</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    
    <BlockGenus name="df_buzzer_tone" kind="command" color="255 102 0" initlabel="bg.df_buzzer">
      <description>
	<text>Generates a square wave of the specified frequency (and 50% duty cycle) on a pin. </text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="number" label="8"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.frequency">
	  <DefaultArg genus-name="number" label="440"/>
	</BlockConnector>
	
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/dfrobot/dfr0032.png</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    
    <BlockGenus name="df_buzzer_tone_delay" kind="command" color="255 102 0" initlabel="bg.df_buzzer">
      <description>
	<text>Generates a square wave of the specified frequency (and 50% duty cycle) on a pin. </text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.pin_number">
	  <DefaultArg genus-name="number" label="8"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.frequency">
	  <DefaultArg genus-name="number" label="440"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.milliseconds">
	  <DefaultArg genus-name="number" label="1000"/>
	</BlockConnector>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/dfrobot/dfr0032.png</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    
    <!-- seeedstudio grove -->
    
    <BlockGenus name="seeed_joystick" kind="data" color="0 255 0" initlabel="bg.seeed_joystick">
      <description>
	<text>Read analog value from analog pin</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="plug"/>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/seeedstudio/COM90133P.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    
    <BlockGenus name="seeed_joystick_button" kind="data" color="0 255 0" initlabel="bg.seeed_joystick_button">
      <description>
	<text>Read analog value from analog pin</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket">
	  <DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
	<BlockConnector connector-type="boolean" connector-kind="plug"/>
      </BlockConnectors>
      <Images>
	<Image>
	  <FileLocation>com/ardublock/block/seeedstudio/COM90133P.jpg</FileLocation>
	</Image>
      </Images>
    </BlockGenus>
    
    <!--  LCD -->
    
     <BlockGenus name="df_lcd_keypad" kind="command" color="228 149 255" initlabel="bg.df_lcd_keypad">
  	<BlockConnectors>
    <BlockConnector connector-type="string" connector-kind="socket" label="bc.message">
      		<DefaultArg genus-name="message" label="message"/>
    </BlockConnector>
	</BlockConnectors>
	 <Images>
    <Image>
      <FileLocation>com/ardublock/block/champodc/LCD.jpg</FileLocation>
    </Image>
  	</Images>
	</BlockGenus>
	
     <BlockGenus name="df_lcd_clear" kind="command" color="228 149 255" initlabel="bg.df_lcd_clear">
      <description>
	<text>Clear LCD Display</text>
      </description>
	</BlockGenus>
	
    <BlockGenus name="df_lcd" kind="command" color="228 149 255" initlabel="bg.df_lcd">
  	<BlockConnectors>
    <BlockConnector connector-type="string" connector-kind="socket" label="bc.message">
      		<DefaultArg genus-name="message" label="message"/>
    </BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="column">
	  		<DefaultArg genus-name="number" label="0"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="line">
	  		<DefaultArg genus-name="number" label="0"/>
	</BlockConnector>
	</BlockConnectors>
	 <Images>
    <Image>
      <FileLocation>com/ardublock/block/champodc/LCD.jpg</FileLocation>
    </Image>
  	</Images>
	</BlockGenus>
	
     <BlockGenus name="df_lcd_set_cursor" kind="command" color="228 149 255" initlabel="bg.df_lcd_set_cursor">
  	<BlockConnectors>
    <BlockConnector connector-type="number" connector-kind="socket" label="column">
	  		<DefaultArg genus-name="number" label="0"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="line">
	  		<DefaultArg genus-name="number" label="0"/>
	</BlockConnector>
	</BlockConnectors>
	 <Images>
    <Image>
      <FileLocation>com/ardublock/block/champodc/LCD.jpg</FileLocation>
    </Image>
  	</Images>
	</BlockGenus>
	
    <!-- L298 -->
    
     <BlockGenus name="L298Init" kind="command" color="113 36 52" initlabel="bg.L298Init">
      <description>
	<text>Init L298 Module (PWM or PLL) (M1 or M2)</text>
      </description>
  	<BlockConnectors>
    <BlockConnector connector-type="string" connector-kind="socket" label="bc.L298Control">
	  		<DefaultArg genus-name="message" label="PWM"/>
	</BlockConnector>
	</BlockConnectors>
	 <Images>
    <Image>
      <FileLocation>com/ardublock/block/champodc/L298P.jpg</FileLocation>
    </Image>
  	</Images>
	</BlockGenus>
	
     <BlockGenus name="L298Speed" kind="command" color="113 36 52" initlabel="bg.L298Speed">
      <description>
	<text>Speed control L298 Module (PWM or PLL) (M1 or M2)</text>
      </description>
  	<BlockConnectors>
  	    <BlockConnector connector-type="string" connector-kind="socket" label="bc.L298Control">
	  		<DefaultArg genus-name="message" label="PWM"/>
	</BlockConnector>
    <BlockConnector connector-type="string" connector-kind="socket" label="bc.L298Motor">
	  		<DefaultArg genus-name="message" label="M1 + M2"/>
	</BlockConnector>
	 <BlockConnector connector-type="string" connector-kind="socket" label="bc.L298Sens">
	  		<DefaultArg genus-name="message" label="FW"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.L298Speed">
	  		<DefaultArg genus-name="number" label="0"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.L298Time">
	  		<DefaultArg genus-name="number" label="1"/>
	</BlockConnector>
	</BlockConnectors>
	 <Images>
    <Image>
      <FileLocation>com/ardublock/block/champodc/L298P.jpg</FileLocation>
    </Image>
  	</Images>
	</BlockGenus>
	
      <BlockGenus name="L298Ramp" kind="command" color="113 36 52" initlabel="bg.L298Ramp">
      <description>
	<text>Ramp control L298 Module (PWM or PLL) (M1 or M2)</text>
      </description>
  	<BlockConnectors>
  	    <BlockConnector connector-type="string" connector-kind="socket" label="bc.L298Control">
	  		<DefaultArg genus-name="message" label="PWM"/>
	</BlockConnector>
    <BlockConnector connector-type="string" connector-kind="socket" label="bc.L298Motor">
	  		<DefaultArg genus-name="message" label="M1 + M2"/>
	</BlockConnector>
	<BlockConnector connector-type="string" connector-kind="socket" label="bc.L298Sens">
	  		<DefaultArg genus-name="message" label="FW"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.L298Delay">
	  		<DefaultArg genus-name="number" label="30"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.L298Increment">
	  		<DefaultArg genus-name="number" label="5"/>
	</BlockConnector>
	</BlockConnectors>
	 <Images>
    <Image>
      <FileLocation>com/ardublock/block/champodc/L298P.jpg</FileLocation>
    </Image>
  	</Images>
	</BlockGenus>
	
      <BlockGenus name="L298Ramp2" kind="command" color="113 36 52" initlabel="bg.L298Ramp2">
      <description>
	<text>Ramp control L298 Module (PWM or PLL) (M1 or M2)</text>
      </description>
  	<BlockConnectors>
  	    <BlockConnector connector-type="string" connector-kind="socket" label="bc.L298Control">
	  		<DefaultArg genus-name="message" label="PWM"/>
	</BlockConnector>
    <BlockConnector connector-type="string" connector-kind="socket" label="bc.L298Motor">
	  		<DefaultArg genus-name="message" label="M1 + M2"/>
	</BlockConnector>
	<BlockConnector connector-type="string" connector-kind="socket" label="bc.L298Sens">
	  		<DefaultArg genus-name="message" label="FW"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.L298Min">
	  		<DefaultArg genus-name="number" label="0"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.L298Max">
	  		<DefaultArg genus-name="number" label="255"/>
	</BlockConnector>
	<BlockConnector connector-type="string" connector-kind="socket" label="bc.L298Ramp">
	  		<DefaultArg genus-name="message" label="UP"/>
	</BlockConnector>
	<BlockConnector connector-type="number" connector-kind="socket" label="bc.L298Time">
	  		<DefaultArg genus-name="number" label="1000"/>
	</BlockConnector>
	</BlockConnectors>
	 <Images>
    <Image>
      <FileLocation>com/ardublock/block/champodc/L298R.jpg</FileLocation>
      
    </Image>
  	</Images>
	</BlockGenus>
	
      <BlockGenus name="L298Stop" kind="command" color="113 36 52" initlabel="bg.L298Stop">
      <description>
	<text>Stop L298 Module (PWM or PLL) (M1 or M2)</text>
      </description>
  	<BlockConnectors>
  	    <BlockConnector connector-type="string" connector-kind="socket" label="bc.L298Control">
	  		<DefaultArg genus-name="message" label="PWM"/>
	</BlockConnector>
    <BlockConnector connector-type="string" connector-kind="socket" label="bc.L298Motor">
	  		<DefaultArg genus-name="message" label="M1 + M2"/>
	</BlockConnector>
	</BlockConnectors>
	 <Images>
    <Image>
      <FileLocation>com/ardublock/block/champodc/L298P.jpg</FileLocation>
    </Image>
  	</Images>
	</BlockGenus>
    
    <!-- CHAMPOL  -->
    
    <BlockGenus name="serial_var_print" kind="command" color="111 147 25" initlabel="bg.serial_var_print">
      <description>
	<text>send variable via Serial port</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket">
	  <DefaultArg genus-name="variable_number" label="var name"/>
	</BlockConnector>
      </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="serial_ln" kind="command" color="111 147 25" initlabel="bg.serial_ln">
      <description>
	<text>send ln via Serial port</text>
      </description>
    </BlockGenus>
    
    <BlockGenus name="def_string" kind="command" color="111 147 255" initlabel="bg.def_string">
  	<description>
	<text>Create String</text>
      </description>
  	<BlockConnectors>
    <BlockConnector connector-type="string" connector-kind="socket" label="bc.message">
      		<DefaultArg genus-name="message" label="@message"/>
    </BlockConnector>
	</BlockConnectors>
	</BlockGenus>
	
    <BlockGenus name="def_byte_array" kind="command" color="111 147 255" initlabel="bg.def_byte_array">
  	<description>
	<text>Create Byte Array by byte[size]</text>
      </description>
  	<BlockConnectors>
    <BlockConnector connector-type="string" connector-kind="socket" label="bc.message">
      		<DefaultArg genus-name="message" label="@message"/>
    </BlockConnector>
    <BlockConnector connector-type="number" connector-kind="socket" label="taille">
	  <DefaultArg genus-name="number" label="16"/>
	</BlockConnector>
	</BlockConnectors>
	</BlockGenus>
    
   
	
    <BlockGenus name="serial_receive" kind="command" color="142 160 210" initlabel="bg.serial_receive">
      <description>
	<text>read message from serial</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="number" connector-kind="socket" label="taille">
		<DefaultArg genus-name="number" label="128"/>
	</BlockConnector>
	  </BlockConnectors>
    </BlockGenus>
    
     <BlockGenus name="serial_send" kind="command" color="142 160 210" initlabel="bg.serial_send">
      <description>
	<text>send message to serial</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="string" connector-kind="socket" label="bc.buffer">
		<DefaultArg genus-name="message" label="@buffer"/>
	</BlockConnector>
	  </BlockConnectors>
    </BlockGenus>
    
    <BlockGenus name="message" kind="data" color="0 0 255" initlabel="bg.message" editable-label="yes">
      <description>
	<text>string message</text>
      </description>
      <BlockConnectors>
	<BlockConnector connector-type="string" connector-kind="plug"/>
	<BlockConnector connector-type="string" connector-kind="socket"/>
      </BlockConnectors>
    </BlockGenus>
	
  </BlockGenuses>
  
  <BlockFamilies>
    <BlockFamily>
      <FamilyMember>digital-high</FamilyMember>
      <FamilyMember>digital-low</FamilyMember>
    </BlockFamily>
    <BlockFamily>
      <FamilyMember>suspend</FamilyMember>
      <FamilyMember>resume</FamilyMember>
    </BlockFamily>
    <BlockFamily>
      <FamilyMember>all</FamilyMember>
      <FamilyMember>alltasks</FamilyMember>
    </BlockFamily>
    <BlockFamily>
      <FamilyMember>delay//</FamilyMember>
      <FamilyMember>delay-until//</FamilyMember>
    </BlockFamily>
    <BlockFamily>
      <FamilyMember>qcmd-sendtoback</FamilyMember>
      <FamilyMember>qcmd-sendtofront</FamilyMember>
      <FamilyMember>qcmd-receive</FamilyMember>
      <FamilyMember>qcmd-peek</FamilyMember>
      <FamilyMember>qcmd-overwrite</FamilyMember>
	  <FamilyMember>qcmd-reset</FamilyMember>
    </BlockFamily>
    <BlockFamily>
      <FamilyMember>qOK-sendtoback</FamilyMember>
      <FamilyMember>qOK-sendtofront</FamilyMember>
      <FamilyMember>qOK-receive</FamilyMember>
      <FamilyMember>qOK-peek</FamilyMember>
      <FamilyMember>qOK-overwrite</FamilyMember>
	  <FamilyMember>qOK-reset</FamilyMember>
    </BlockFamily>
    <BlockFamily>
      <FamilyMember>detach_interrupt</FamilyMember>
      <FamilyMember>attach_interrupt</FamilyMember>
    </BlockFamily>
    <BlockFamily>
      <FamilyMember>true</FamilyMember>
      <FamilyMember>false</FamilyMember>
    </BlockFamily>
    <BlockFamily>
      <FamilyMember>digital-change-INT</FamilyMember>
      <FamilyMember>digital-low-INT</FamilyMember>
      <FamilyMember>digital-rising-INT</FamilyMember>
      <FamilyMember>digital-falling-INT</FamilyMember>
    </BlockFamily>
<!--     <BlockFamily> -->
<!--       <FamilyMember>convert_int16</FamilyMember> -->
<!--       <FamilyMember>convert_int32</FamilyMember> -->
<!--     </BlockFamily> -->
    
    <BlockFamily>
      <FamilyMember>digital-low//</FamilyMember>
      <FamilyMember>digital-normal//</FamilyMember>
      <FamilyMember>digital-high//</FamilyMember>
    </BlockFamily>
    <BlockFamily>
      <FamilyMember>and</FamilyMember>
      <FamilyMember>or</FamilyMember>
    </BlockFamily>
    <BlockFamily>
      <FamilyMember>equal</FamilyMember>
      <FamilyMember>not_equal</FamilyMember>
      <FamilyMember>less</FamilyMember>
      <FamilyMember>greater</FamilyMember>
      <FamilyMember>less_equal</FamilyMember>
      <FamilyMember>greater_equal</FamilyMember>
    </BlockFamily>
    <BlockFamily>
      <FamilyMember>addition</FamilyMember>
      <FamilyMember>subtraction</FamilyMember>
      <FamilyMember>multiplication</FamilyMember>
      <FamilyMember>division</FamilyMember>
      <FamilyMember>modulo</FamilyMember>
      <FamilyMember>pow</FamilyMember>
    </BlockFamily>
    <BlockFamily>
      <FamilyMember>bitwise_not</FamilyMember>
      <FamilyMember>bitwise_and</FamilyMember>
      <FamilyMember>bitwise_or</FamilyMember>
      <FamilyMember>bitwise_xor</FamilyMember>
      <FamilyMember>bitwise_left</FamilyMember>
      <FamilyMember>bitwise_right</FamilyMember>
    </BlockFamily>
    <BlockFamily>
      <FamilyMember>set_number</FamilyMember>
      <FamilyMember>set_number_addition</FamilyMember>
      <FamilyMember>set_number_subtraction</FamilyMember>
      <FamilyMember>set_number_multiplication</FamilyMember>
      <FamilyMember>set_number_division</FamilyMember>
      <FamilyMember>set_number_bitwiseand</FamilyMember>
      <FamilyMember>set_number_bitwiseor</FamilyMember>
    </BlockFamily>    
    <BlockFamily>
      <FamilyMember>set_real_number</FamilyMember>
      <FamilyMember>set_number_addition</FamilyMember>
      <FamilyMember>set_number_subtraction</FamilyMember>
      <FamilyMember>set_number_multiplication</FamilyMember>
      <FamilyMember>set_number_division</FamilyMember>
      <FamilyMember>set_number_bitwiseand</FamilyMember>
      <FamilyMember>set_number_bitwiseor</FamilyMember>
    </BlockFamily>    
     <BlockFamily>
      <FamilyMember>set_digital</FamilyMember>
      <FamilyMember>set_digital_bitwiseand</FamilyMember>
      <FamilyMember>set_digital_bitwiseor</FamilyMember>
    </BlockFamily>    
     <BlockFamily>
      <FamilyMember>serial_print</FamilyMember>
      <FamilyMember>serial_print_1</FamilyMember>
      <FamilyMember>serial_print_2</FamilyMember>
      <FamilyMember>serial_print_3</FamilyMember>
    </BlockFamily>   
    <BlockFamily>
      <FamilyMember>serial_println</FamilyMember>
      <FamilyMember>serial_println_1</FamilyMember>
      <FamilyMember>serial_println_2</FamilyMember>
      <FamilyMember>serial_println_3</FamilyMember>
    </BlockFamily>   
     <BlockFamily>
      <FamilyMember>serial_read</FamilyMember>
      <FamilyMember>serial_read_1</FamilyMember>
      <FamilyMember>serial_read_2</FamilyMember>
      <FamilyMember>serial_read_3</FamilyMember>
    </BlockFamily>
     <BlockFamily>
      <FamilyMember>abs</FamilyMember>
      <FamilyMember>sqrt</FamilyMember>
    </BlockFamily>
    <BlockFamily>
      <FamilyMember>sin</FamilyMember>
      <FamilyMember>cos</FamilyMember>
      <FamilyMember>tan</FamilyMember>
    </BlockFamily>
    <BlockFamily>
      <FamilyMember>min</FamilyMember>
      <FamilyMember>max</FamilyMember>
    </BlockFamily>
    <BlockFamily>
      <FamilyMember>digital-on</FamilyMember>
      <FamilyMember>digital-off</FamilyMember>
    </BlockFamily>
    <BlockFamily>
      <FamilyMember>pin_00</FamilyMember>
      <FamilyMember>pin_01</FamilyMember>
      <FamilyMember>pin_02</FamilyMember>
      <FamilyMember>pin_03</FamilyMember>
      <FamilyMember>pin_04</FamilyMember>
      <FamilyMember>pin_05</FamilyMember>
      <FamilyMember>pin_06</FamilyMember>
      <FamilyMember>pin_07</FamilyMember>
      <FamilyMember>pin_08</FamilyMember>
      <FamilyMember>pin_09</FamilyMember>
      <FamilyMember>pin_10</FamilyMember>
      <FamilyMember>pin_11</FamilyMember>
      <FamilyMember>pin_12</FamilyMember>
      <FamilyMember>pin_13</FamilyMember>
      <FamilyMember>pin_14</FamilyMember>
      <FamilyMember>pin_15</FamilyMember>
      <FamilyMember>pin_16</FamilyMember>
      <FamilyMember>pin_17</FamilyMember>
      <FamilyMember>pin_18</FamilyMember>
      <FamilyMember>pin_19</FamilyMember>
    </BlockFamily>
    <BlockFamily>
      <FamilyMember>pin_A0</FamilyMember>
      <FamilyMember>pin_A1</FamilyMember>
      <FamilyMember>pin_A2</FamilyMember>
      <FamilyMember>pin_A3</FamilyMember>
      <FamilyMember>pin_A4</FamilyMember>
      <FamilyMember>pin_A5</FamilyMember>
    </BlockFamily>
    <BlockFamily>
      <FamilyMember>pin_pwm3</FamilyMember>
      <FamilyMember>pin_pwm5</FamilyMember>
      <FamilyMember>pin_pwm6</FamilyMember>
      <FamilyMember>pin_pwm9</FamilyMember>
      <FamilyMember>pin_pwm10</FamilyMember>
      <FamilyMember>pin_pwm11</FamilyMember>
    </BlockFamily>
    <BlockFamily>
      <FamilyMember>pin_int0</FamilyMember>
      <FamilyMember>pin_int1</FamilyMember>
    </BlockFamily>
    <BlockFamily>
      <FamilyMember>df_joystick_module_x</FamilyMember>
      <FamilyMember>df_joystick_module_y</FamilyMember>
    </BlockFamily>
    <BlockFamily>
      <FamilyMember>df_mma7260_x</FamilyMember>
      <FamilyMember>df_mma7260_y</FamilyMember>
      <FamilyMember>df_mma7260_z</FamilyMember>
    </BlockFamily>
    <BlockFamily>
      <FamilyMember>Tinker_I0</FamilyMember>
      <FamilyMember>Tinker_I1</FamilyMember>
      <FamilyMember>Tinker_I2</FamilyMember>
      <FamilyMember>Tinker_I3</FamilyMember>
      <FamilyMember>Tinker_I4</FamilyMember>
      <FamilyMember>Tinker_I5</FamilyMember>
    </BlockFamily>
    <BlockFamily>
      <FamilyMember>Tinker_O0</FamilyMember>
      <FamilyMember>Tinker_O1</FamilyMember>
      <FamilyMember>Tinker_O2</FamilyMember>
      <FamilyMember>Tinker_O3</FamilyMember>
      <FamilyMember>Tinker_O4</FamilyMember>
      <FamilyMember>Tinker_O5</FamilyMember>
    </BlockFamily>
  </BlockFamilies>

  <BlockDrawerSets>	
    <BlockDrawerSet name="factory" type="stack" location="northeast" window-per-drawer="yes" drawer-draggable="no">
      <BlockDrawer name="bd.loop" type="factory" is-open="yes" button-color="255 255 255">
   	<BlockGenusMember>loop</BlockGenusMember>
	<BlockGenusMember>loop//</BlockGenusMember>
   	<BlockGenusMember>delay//</BlockGenusMember>
<!-- 	<BlockGenusMember>semaphore</BlockGenusMember> -->
	<BlockGenusMember>semdeclare</BlockGenusMember>
	<BlockGenusMember>semgive</BlockGenusMember>
	<BlockGenusMember>semtake</BlockGenusMember>
	<BlockGenusMember>semtakeOK</BlockGenusMember>
	
	<BlockGenusMember>qhandle</BlockGenusMember>
    <BlockGenusMember>qcmd-sendtoback</BlockGenusMember>
    <BlockGenusMember>qOK-sendtoback</BlockGenusMember>
   	<BlockGenusMember>suspend</BlockGenusMember>
	<BlockGenusMember>all</BlockGenusMember>
     </BlockDrawer>

      <BlockDrawer name="bd.control" type="factory" is-open="yes" button-color="252 203 125">
   	<!-- <BlockGenusMember>loop</BlockGenusMember> -->
	<BlockGenusMember>ifelse</BlockGenusMember>
	<BlockGenusMember>if</BlockGenusMember>
	<BlockGenusMember>while</BlockGenusMember>
	<BlockGenusMember>dowhile</BlockGenusMember>
	<BlockGenusMember>repeat</BlockGenusMember>
	<BlockGenusMember>for</BlockGenusMember>
	<BlockGenusMember>switch</BlockGenusMember>
	<BlockGenusMember>break</BlockGenusMember>
	<BlockGenusMember>continue</BlockGenusMember>
      </BlockDrawer>

      <BlockDrawer name="bd.pins" type="factory" button-color="29 152 155">
	<BlockGenusMember>pin-read-digital</BlockGenusMember>
	<BlockGenusMember>pin-write-digital</BlockGenusMember>
	<BlockGenusMember>pin-read-analog</BlockGenusMember>
	<BlockGenusMember>pin-write-analog</BlockGenusMember>
	<!-- <BlockGenusMember>tone</BlockGenusMember> -->
	<BlockGenusMember>tone_time</BlockGenusMember>
	<BlockGenusMember>no_tone</BlockGenusMember>
	<BlockGenusMember>pulsein</BlockGenusMember>
      </BlockDrawer>

      <BlockDrawer name="bd.time" type="factory" button-color="65 105 225">
	<BlockGenusMember>delay</BlockGenusMember>
	<BlockGenusMember>delay_microseconds</BlockGenusMember>
	<BlockGenusMember>millis</BlockGenusMember>
	<BlockGenusMember>micros</BlockGenusMember>     
	<BlockGenusMember>procedure_interrupt</BlockGenusMember>
	<BlockGenusMember>detach_interrupt</BlockGenusMember>
<!-- 	<BlockGenusMember>attach_interrupt</BlockGenusMember>      -->
	<BlockGenusMember>allints</BlockGenusMember>
<!-- 	<BlockGenusMember>no_interrupt</BlockGenusMember>      -->
      </BlockDrawer>

      <BlockDrawer name="bd.number" type="factory" button-color="182 85 52">
	<BlockGenusMember>digital-high</BlockGenusMember>
	<!-- <BlockGenusMember>digital-low</BlockGenusMember>  -->
	<BlockGenusMember>true</BlockGenusMember>
	<!-- <BlockGenusMember>false</BlockGenusMember> -->
	<BlockGenusMember>number</BlockGenusMember>
	<BlockGenusMember>real_number</BlockGenusMember>
	<BlockGenusMember>convert_real</BlockGenusMember>
	<!-- <BlockGenusMember>number2</BlockGenusMember> -->
	<BlockGenusMember>variable_digital</BlockGenusMember>
	<BlockGenusMember>variable_string</BlockGenusMember>
	<BlockGenusMember>variable_number</BlockGenusMember>
	<BlockGenusMember>variable_real_number</BlockGenusMember>
	<!-- 	<BlockGenusMember>set_var_number</BlockGenusMember> -->
	<BlockGenusMember>set_digital</BlockGenusMember>
	<BlockGenusMember>set_string</BlockGenusMember>
	<BlockGenusMember>set_number</BlockGenusMember>
	<BlockGenusMember>set_real_number</BlockGenusMember>
	<!-- <BlockGenusMember>Tinker_I0</BlockGenusMember>
	<BlockGenusMember>Tinker_I1</BlockGenusMember>
	<BlockGenusMember>Tinker_I2</BlockGenusMember>
	<BlockGenusMember>Tinker_I3</BlockGenusMember>
	<BlockGenusMember>Tinker_I4</BlockGenusMember>
	<BlockGenusMember>Tinker_I5</BlockGenusMember>
	<BlockGenusMember>Tinker_O0</BlockGenusMember>
	<BlockGenusMember>Tinker_O1</BlockGenusMember>
	<BlockGenusMember>Tinker_O2</BlockGenusMember>
	<BlockGenusMember>Tinker_O3</BlockGenusMember>
	<BlockGenusMember>Tinker_O4</BlockGenusMember>
	<BlockGenusMember>Tinker_O5</BlockGenusMember> -->
      </BlockDrawer>

      <BlockDrawer name="bd.list" type="factory" button-color="225 155 0">
	<BlockGenusMember>list</BlockGenusMember>
	<BlockGenusMember>variable_digital_list</BlockGenusMember>
	<BlockGenusMember>variable_number_list</BlockGenusMember>
	<BlockGenusMember>init_list</BlockGenusMember>
	<BlockGenusMember>add-to-list</BlockGenusMember>
	<BlockGenusMember>length</BlockGenusMember>
	<BlockGenusMember>get-list-item</BlockGenusMember>
      </BlockDrawer>

      <BlockDrawer name="bd.operators" type="factory" button-color="114 147 71">
	<BlockGenusMember>and</BlockGenusMember>
	<!-- <BlockGenusMember>or</BlockGenusMember> -->
	<BlockGenusMember>not</BlockGenusMember>
	
	<BlockGenusMember>equal</BlockGenusMember>
	<!-- <BlockGenusMember>not_equal</BlockGenusMember>
	<BlockGenusMember>less</BlockGenusMember>
	<BlockGenusMember>greater</BlockGenusMember>
	<BlockGenusMember>less_equal</BlockGenusMember>
	<BlockGenusMember>greater_equal</BlockGenusMember> -->
	
	<BlockGenusMember>text_equal</BlockGenusMember>

	<BlockGenusMember>addition</BlockGenusMember>
	<!-- <BlockGenusMember>subtraction</BlockGenusMember>
	<BlockGenusMember>multiplication</BlockGenusMember>
	<BlockGenusMember>division</BlockGenusMember>
	<BlockGenusMember>modulo</BlockGenusMember> -->
	
	<BlockGenusMember>bitwise_not</BlockGenusMember>
	
	<BlockGenusMember>abs</BlockGenusMember>
	<!-- <BlockGenusMember>sqrt</BlockGenusMember> -->
	<!-- <BlockGenusMember>pow</BlockGenusMember> -->

	<BlockGenusMember>sin</BlockGenusMember>
	<!-- <BlockGenusMember>cos</BlockGenusMember>
	<BlockGenusMember>tan</BlockGenusMember> -->

	<BlockGenusMember>min</BlockGenusMember>
	<!-- <BlockGenusMember>max</BlockGenusMember> -->

	<BlockGenusMember>constrain</BlockGenusMember>
	<BlockGenusMember>map_common</BlockGenusMember>
	<BlockGenusMember>map</BlockGenusMember>

	<BlockGenusMember>random</BlockGenusMember>
	
	<BlockGenusMember>text_append</BlockGenusMember>
	
      </BlockDrawer>

      <BlockDrawer name="bd.serial" type="factory" button-color="95 120 132">
 	<BlockGenusMember>text</BlockGenusMember>
 	<BlockGenusMember>text_append</BlockGenusMember>
	<BlockGenusMember>text_equal</BlockGenusMember>
	<BlockGenusMember>serial_print</BlockGenusMember>
 	<BlockGenusMember>serial_println</BlockGenusMember>
 	<BlockGenusMember>serial_read</BlockGenusMember>
      </BlockDrawer>
      
      <BlockDrawer name="bd.variables" type="factory" button-color="186 85 211">
 	<!-- <BlockGenusMember>global-var</BlockGenusMember> -->
 	<BlockGenusMember>global-var-boolean</BlockGenusMember>
 	<BlockGenusMember>global-var-number</BlockGenusMember>
 	<BlockGenusMember>global-var-real</BlockGenusMember>
	<BlockGenusMember>global-var-string</BlockGenusMember>
	<BlockGenusMember>global-var-boolean-list</BlockGenusMember>
 	<BlockGenusMember>global-var-number-list</BlockGenusMember>
 	<BlockGenusMember>global-var-string-list</BlockGenusMember>
      </BlockDrawer>
      
    	<BlockDrawer name="bd.procedure" type="factory" button-color="177 10 255">
	<BlockGenusMember>procedure</BlockGenusMember>
	<BlockGenusMember>proc-param-number</BlockGenusMember>
	<BlockGenusMember>proc-param-string</BlockGenusMember>
	<BlockGenusMember>proc-param-boolean</BlockGenusMember>
	<BlockGenusMember>proc-param-list</BlockGenusMember>
	<BlockGenusMember>return</BlockGenusMember>
		</BlockDrawer>
			
      <BlockDrawer name="bd.utilities" type="factory" button-color="95 120 132">
	<!-- <BlockGenusMember>lcd</BlockGenusMember> -->
	<BlockGenusMember>ultrasonic</BlockGenusMember>
	<BlockGenusMember>servo</BlockGenusMember>
	<BlockGenusMember>stepper</BlockGenusMember>
	<BlockGenusMember>lcdinit</BlockGenusMember>
	<BlockGenusMember>touch_sensitive</BlockGenusMember>
    
	<BlockGenusMember>wire_write</BlockGenusMember>
	<BlockGenusMember>wire_read</BlockGenusMember>
	<BlockGenusMember>wire_isread</BlockGenusMember>
	  </BlockDrawer>

	<!--       
      <BlockDrawer button-color="255 255 255" name="bd.tinkerkit" type="factory">
	<BlockGenusMember>Tinker_LED</BlockGenusMember>
	<BlockGenusMember>Tinker_LED_pwm</BlockGenusMember>
	<BlockGenusMember>Tinker_Button</BlockGenusMember>
	<BlockGenusMember>Tinker_Accmeter</BlockGenusMember>
	<BlockGenusMember>Tinker_Hall</BlockGenusMember>
	<BlockGenusMember>Tinker_LDR</BlockGenusMember>
	<BlockGenusMember>Tinker_LinearPotentiometer</BlockGenusMember>
	<BlockGenusMember>Tinker_RotaryPotentiometer</BlockGenusMember>
	<BlockGenusMember>Tinker_Thermistor</BlockGenusMember>
	<BlockGenusMember>Tinker_Touch</BlockGenusMember>
	<BlockGenusMember>Tinker_Tilt</BlockGenusMember>
	<BlockGenusMember>Tinker_Relay</BlockGenusMember>
	<BlockGenusMember>Tinker_Mosfet</BlockGenusMember>
	<BlockGenusMember>Tinker_Mosfet_pwm</BlockGenusMember>
      </BlockDrawer>
      -->
      <!--  			
	   <BlockDrawer button-color="0 255 0" name="XinChejian" type="factory">
	   <BlockGenusMember>xcj_motor_forward</BlockGenusMember>
	   <BlockGenusMember>xcj_motor_backward</BlockGenusMember>
	   <BlockGenusMember>xcj_ms_digital_read</BlockGenusMember>
	   <BlockGenusMember>xcj_ms_digital_write</BlockGenusMember>
	   </BlockDrawer>
      -->
      <!--
      <BlockDrawer button-color="255 102 0" name="bd.dfrobot" type="factory">
	<BlockGenusMember>df_digital_viberation_sensor</BlockGenusMember>
	<BlockGenusMember>df_digital_infrared_motion_sensor</BlockGenusMember>
	<BlockGenusMember>df_digital_ir_receiver_module</BlockGenusMember>
	<BlockGenusMember>df_adjustable_infrared_sensor_switch</BlockGenusMember>
	<BlockGenusMember>df_line_tracking_sensor</BlockGenusMember>
	<BlockGenusMember>df_digital_push_button</BlockGenusMember>
	<BlockGenusMember>df_joystick_module_button</BlockGenusMember>
	<BlockGenusMember>df_capacitive_touch_sensor</BlockGenusMember>
	<BlockGenusMember>df_pizeo_disk_vibration_sensor</BlockGenusMember>
	<BlockGenusMember>df_analog_ambient_light_sensor</BlockGenusMember>
	<BlockGenusMember>df_analog_grayscale_sensor</BlockGenusMember>
	<BlockGenusMember>df_flame_sensor</BlockGenusMember>
	<BlockGenusMember>df_temperature_sensor</BlockGenusMember>
	<BlockGenusMember>df_joystick_module_x</BlockGenusMember>
	<BlockGenusMember>df_joystick_module_y</BlockGenusMember>
	<BlockGenusMember>df_mma7260_x</BlockGenusMember>
	<BlockGenusMember>df_mma7260_y</BlockGenusMember>
	<BlockGenusMember>df_mma7260_z</BlockGenusMember>
	<BlockGenusMember>df_analog_rotation_sensor_v1</BlockGenusMember>
	<BlockGenusMember>df_analog_rotation_sensor_v2</BlockGenusMember>
	<BlockGenusMember>df_analog_sound_sensor</BlockGenusMember>
	<BlockGenusMember>df_analog_gas_sensor</BlockGenusMember>
	<BlockGenusMember>df_servo</BlockGenusMember>
	<BlockGenusMember>df_360_degree_rotation_motor</BlockGenusMember>
	<BlockGenusMember>df_led</BlockGenusMember>
	<BlockGenusMember>df_led_pwm</BlockGenusMember>
	<BlockGenusMember>df_piranha_led</BlockGenusMember>
	<BlockGenusMember>df_piranha_led_pwm</BlockGenusMember>
	<BlockGenusMember>df_relay</BlockGenusMember>
	<BlockGenusMember>df_buzzer</BlockGenusMember>
	<BlockGenusMember>df_buzzer_tone</BlockGenusMember>
	<BlockGenusMember>df_buzzer_tone_delay</BlockGenusMember>
	 </BlockDrawer>
      -->
      <!--
      <BlockDrawer button-color="0 255 0" name="bd.seeedstudio">
	<BlockGenusMember>seeed_joystick</BlockGenusMember>
	<BlockGenusMember>seeed_joystick_button</BlockGenusMember>
      </BlockDrawer>
      -->
      <!--
      <BlockDrawer button-color="228 149 255" name="bd.LCD" type="factory">
          <BlockGenusMember>df_lcd_keypad</BlockGenusMember>
          <BlockGenusMember>df_lcd</BlockGenusMember>
          <BlockGenusMember>df_lcd_clear</BlockGenusMember>
          <BlockGenusMember>df_lcd_set_cursor</BlockGenusMember>
      </BlockDrawer>
      -->
      <!--
      <BlockDrawer button-color="113 36 52" name="bd.L298" type="factory">
          <BlockGenusMember>L298Init</BlockGenusMember>
          <BlockGenusMember>L298Speed</BlockGenusMember>
          <BlockGenusMember>L298Ramp</BlockGenusMember>
          <BlockGenusMember>L298Ramp2</BlockGenusMember> 
          <BlockGenusMember>L298Stop</BlockGenusMember>
      </BlockDrawer>
	-->
	<!--
      <BlockDrawer button-color="65 105 225" name="bd.champo" type="factory">
          <BlockGenusMember>def_string</BlockGenusMember>
          <BlockGenusMember>def_byte_array</BlockGenusMember>
          <BlockGenusMember>serial_read</BlockGenusMember>
          <BlockGenusMember>serial_receive</BlockGenusMember>
          <BlockGenusMember>serial_send</BlockGenusMember>   
          <BlockGenusMember>serial_var_print</BlockGenusMember>
          <BlockGenusMember>serial_ln</BlockGenusMember>
          
      </BlockDrawer>
 	-->          
      <!-- Shapes are automatically loaded as blocks in the Shapes drawer
	   (see slcodeblocks.ShapeBlocksGenerator for details)  -->
      <!-- Sound blocks reside in the auto-generated String drawer.  
	   (see slcodeblocks.SoundBlocksGenerator for details)  -->
    </BlockDrawerSet>
  </BlockDrawerSets>

  <Pages drawer-with-page="no">
	<Page page-name="Setup" page-width="100" />
	<Page page-name="Loop" page-width="400"/>
    <Page page-name="Procedures" page-width="400"></Page>
	<Page page-name="Parallel Loops" page-width="400"></Page>
  </Pages>

  <TrashCan>
    <OpenTrashImage>com/ardublock/block/trash_open.png</OpenTrashImage>
    <ClosedTrashImage>com/ardublock/block/trash.png</ClosedTrashImage>
  </TrashCan>
  
</BlockLangDef>
